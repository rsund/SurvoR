SURVO84ED 86 100    86 S100                                                           *SAVE PR9                                                                             *LOAD PRI                                                                             *TRIM3 63,P3                                                                          *Survo User's Guide                                                                   *DEF A,6,END                                                                          -replace ????? 9.12                                                                   (                                                                                     *                                                                                     *9.12* PostScript code in the PRINT list                                              *In the PRINT operation, pure PostScript code may be written on the control           )lines of the PRINT list. For example, the scheme                                     - [I]                                                                                 (  12  1 SURVO 84C EDITOR Thu Jan 21 19:33:05 1988         D:\P2\PRI\ 120  80 0       *   1 *                                                                               *   2 *PRINT 3,END                                                                    *   3 *Rotating square:                                                               *   4 % 100                                                                           *   5 - [SWISSB(22)]                                                                  *   6 - /edge 25 def[LF]                                                              *   7 - /square { currentpoint newpath moveto edge neg 0 rlineto[LF]                  *   8 -          0 edge rlineto edge 0 rlineto closepath[LF]                          *   9 -          gsave 1 setgray fill grestore stroke } def[LF]                       *  10 - /S { edge -0.8 mul edge 0.2 mul moveto (S) show } def[LF]                     *  11 - gsave currentpoint /y exch def /x exch def x edge add y translate[LF]         *  12 - 0 5 90 { gsave /angle exch def edge 8 div angle mul 0 translate[LF]           *  13 -          angle neg rotate 0 0 moveto square S grestore } for[LF]              *  14 - grestore x y moveto[LF]                                                       *  15 *                                                                               *                                                                                     )                                                                                     - [M]                                                                                 )produces the following:                                                              *                                                                                     *                                                                                     - [Times(12)]                                                                         (Rotating square:                                                                     % 100                                                                                 - [SWISSB(22)]                                                                        - /edge 25 def[LF]                                                                    - /square { currentpoint newpath moveto edge neg 0 rlineto[LF]                        -          0 edge rlineto edge 0 rlineto closepath[LF]                                -          gsave 1 setgray fill grestore stroke } def[LF]                             - /S { edge -0.8 mul edge 0.2 mul moveto (S) show } def[LF]                           - gsave currentpoint /y exch def /x exch def x edge add y translate[LF]               - 0 5 90 { gsave /angle exch def edge 8 div angle mul 0 translate[LF]                 -          angle neg rotate 0 0 moveto square S grestore } for[LF]                    - grestore x y moveto[LF]                                                             )                                                                                     - [M]                                                                                 *                                                                                     *                                                                                     *                                                                                     *Although our intention here is not to teach PostScript programming, we try to        *explain briefly the essence of this example.                                         *     All the PostScript lines (in a PRINT list) must have a `-' in the control       *column and they must be terminated by a line feed [LF] or a space [S]. These         *line end codes are essential because PRINT does not automatically produce            *any line end codes on control lines.                                                 *     PostScript code written in the PRINT list will be treated in the environment    *created by the driver PS.DEV and by the earlier lines in the same PRINT list.        *Thus various bracketed control words of Survo have their natural effects in          *PostScript code.                                                                     *    In our example, line 5 defines the 22 point Helvetica as the current font        *type. The actual PostScript lines 6-14 work as follows:                              *    Line 6 gives the value 25 Points for the side length of the square. One Point    *or 1/72 inches is the default unit in PostScript plotting and Survo obeys this       *convention, too.                                                                     *    On lines 7-9, a procedure square is defined. It creates a path for a square,     *paints it white, and ®nally draws the edges.                                         *    Procedure S on line 10 writes the capital S inside the square. Line 11 saves     *the current graphics state and the current point (x,y). The origin is then moved     *by the edge of the square to the right from the current point (on the left mar-      *gin).                                                                                *    The program loop on lines 12-13 rotates the coordinate system by angles of       *0,5,10,...,90 degrees and at the same time moves the bottom right corner of the      *square angle/8 Points to the right. During each round of the loop the square         *and `S' in it will be plotted.                                                       *    Line 14 restores the original graphics state and takes (x,y) again as the cur-   *rent point. Thus in PRINT we are back in the same situation on the page as we        *were before making these special graphics.                                           *                                                                                     UMore information is found about PostScript e.g. in the following books:              U      PostScript Language Reference Manual, Adobe Systems Inc.,                      U      PostScript Language Tutorial and Cookbook, Adobe Systems Inc.                  UThese documents have been published in 1985 by Addison-Wesley.                       *    We emphasize that mastering PostScript is not essential for a Survo user.        *All important features of PostSript have well-defined counterparts as regular        *control words in Survo printing and plotting. Only in very demanding applica-        *tions is direct application of PostScript necessaryhadows                                                                               	  o11111111111111111111111111111111111111MH                                          
         I    M                                                                                     I    M                                                                  777777777777777777777777777777777777777777777777777777777777777777777777777777       {                                                                                          77777777777k                                                                                                                                                }     7                                      I    M                   IM                    8                                                    I   M           I  M             9                                       I    M                                        ;                                      I    M                                         <                        I     M                                     I    M           D                                I     M                                              F                IM                                                                   G                                                   I    M                            L         I      M                                                                    N                                                             I    M                  O                      I    M                                                         S        666666666666666666666666666666666666                                         T        66666666666666666666666666666666666666666                                    END                                                                                   