Ta1@SCRATCH €üSOFTKEYS SUR_SOFT,DUMMY€BüTa-1@   µµµµµµµMatrix operationsTW5@   µµµµMatrix inversionMATRIX A ///  2  8  9  5  0  4  5  6  3  2  5  0  1  1  7  2MAT SAVE A / Matrix A is saved.TW10@€TW20@MAT B=INV(A,det)TW10@€TW20@MAT LOAD B,17TW10@€TW20@TW10@MAT C=A*BTW10@€TW20@MAT LOAD C,25TW10@€TW20@TW5@##.#########,TW10@€TW20@TW10@7TW10@TW10@üTW10@continuous activation of commands by F2 ESCTW10@BüTD2@€TD0@TW20@TW10@TW10@SCRATCH €TW10@B   µµµµSingular value decompositionn=100 r=0.8TW10@Creating a 100*100 matrix A with diagonal elements = 1and off-diagonal elements = 0.8:TW10@MAT A=CON(n,n,r)+IDN(n,n,1-r)TW10@€TW10@MAT LOAD A(1:10,1:10),#.#,11TW10@€TW40@SCRATCH TW10@€TW10@MAT SINGULAR_VALUE DECOMPOSITION OF A TO U,D,V€TW10@MAT LOAD D,11TW10@€TW20@Sum of singular values =TW5@´·+€=TW10@TW10@TW10@SCRATCH TW10@€TW10@Checking the result by the formula A=U*diag(D)*V'TW10@MAT B=U*DV(D)*V' / DV(D) = vector D converted to diagonal matrixTW20@€TW20@MAT LOAD B(1:10,1:10),CUR+1€TW20@TW5@TW20@TW10@TW10@SCRATCH TW10@€TW10@B   µµµµLinear regression analysis by orthogonalizationTW10@ü>COPY !DECA DECA.SVO€Creating the data matrix Z from the data file DECA:TW10@MASK=AAAAAAAMAT SAVE DATA DECA TO ZTW10@€TW10@MAT LOAD Z,########,10€TW20@TW10@SCRATCH TW10@€TW10@MAT DIM ZTW10@€TW20@MAT X=CON(rowZ,colZ)€TW10@MAT X(0,1)="Constant"€TW10@MAT C=Z(*,2:colZ)€TW10@MAT X(1,2)=C€TW10@MAT NAME X AS X€TW10@   / matrix of regressorsTW10@MAT Y!=Z(*,1)€TW10@/ regressandTW10@MAT GRAM-SCHMIDT DECOMPOSITION OF X TO U,R€TW10@MAT C=U'*Y€TW10@MAT SOLVE B FROM R*B=C€TW10@MAT NAME B AS Regression_coefficients€TW10@MAT LOAD B,END+2€TW20@TW40@>DEL *.MAT€>DEL DECA.SVO€TXE2@0T!1@CD@TL!NEXT@Tÿ




