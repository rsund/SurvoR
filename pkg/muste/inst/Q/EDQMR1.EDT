SURVO 98 edit field:    81       200       20 (32 bit version)
001|*SAVE EDQMR1
002|*LOAD EDQ
004|*MATRUN?
005|*A MAT chain can also be saved on disk as text file (by SAVEP, for
006|*example) and activated by a MATRUN command.
007|*For example,
008|*MATRUN PCOMP,X,3
009|*executes a PCOMP chain with parameters X (name of data matrix) and
010|*3 (number of principal components). PCOMP refers here to a text file
011|*PCOMP.MTX which by default is located in the <Survo>\U\M subdirectory of
012|*Survo. In the PCOMP file notations %1,%2,... are used for parameters.
013|*In the preceding example %1 will be replaced by X and %2 by 3.
015|*You may get information on a particular MATRUN chain by activating
016|*MATRUN PCOMP?
017|*The INDEX field in the <Survo>\U\M subdirectory lists all standard MATRUN
018|*chains. Many tasks related to multivariate statistical analysis and
019|*linear models may be carried out by these MATRUN chains.
020|*@C
021|*In many cases, programming of MAT chains is not anymore the best way to
022|*make sequences of matrix operations.
023|*The same tasks are accomplished simpler by sucros using MAT operations
024|*(see SUCRO?)
026|*  M = More information on matrix operations
027|*  S = More information on multivariate statistical operations
028|%M=MAT? S=MULTI? @
030|*GROUP?
031|*  1 = Grouping of observations by cluster analysis
032|*  2 = Aggregating observations (FILE AGGRE)
033|*  3 = Grouping observations in bar charts (GROUPING specification)             C
034|%1=CLUSTER 2=AGGRE? 3=GROUP2?
036|*CLUSTER?
037|*Cluster analysis
039|*  1 = Statistical clustering by the Wilks' lambda criterion (CLUSTER)
040|*  2 = Hierarchical methods (small data, dendrograms) (HCLUSTER)
041|*  3 = Clustering by using medoids (DCLUSTER)
042|*  4 = (Generalized) single linkage (large data) (DCLUSTER)
044|*  M = More information on multivariate statistical operations
045|%1=CLUSTER1 2=HCLUSTER? 3=DCLUSTER 4=DCLUSTER M=MULTI?
047|*CLUSTER1?
048|*CLUSTER <data_file>,L
049|*performs cluster analysis on the selected variables and observations
050|*of the Survo <data_file>.
051|*The clustering criterion is Wilks' lambda and the stepwise procedure
052|*for efficient computation of lambda values is based on the algorithm
053|*presented by Pekka Korhonen in his doctoral dissertation "A stepwise
054|*procedure for multivariate clustering", Computing Centre, University
055|*of Helsinki, Research Reports N:o 7, Helsinki 1979.
056|*In the CLUSTER module, the dual procedure of Korhonen's stepwise
057|*method is applied.
058|*For general information on cluster analysis, see e.g.
059|*M.R.Anderberg: "Cluster Analysis for Applications", Academic Press,
060|*New York and London, 1973.
062|*The active observations of <data_file> are defined by IND and CASES
063|*specifications.
064|*The variables used in the analysis are all active variables in
065|*<data_file>, except those activated by 'G' or 'I'.
066|*@C
067|*The stepwise clustering procedure is always based on some initial
068|*grouping of observations. The user has to give the number (g) of clusters
069|*by the GROUPS=g specification. GROUPS=2 is the default.
070|*The initial grouping is given by a variable activated by 'I' and the
071|*values of this variable must be integers 1,2,..,g. If the initial
072|*grouping of observations is not given (no mask 'I' exists), a random
073|*initial grouping based on uniform distribution over 1,2,...,g is applied
074|*automatically.
075|*The initial grouping (defined by the 'I' mask variable) can also be
076|*incomplete (with missing values or values outside the permitted ones
077|*1,2,...,g). In this case it is assumed that the user has indicated
078|*at least one observation in each group. Then, the initial grouping
079|*will be selected on this basis by using the "nearest neighbour"
080|*principle in the standardized data matrix X (with the property X'X=I).
081|*@C
082|*The main result of CLUSTER is the optimal clustering based on
083|*the Wilk's lambda criterion and it is saved in the first variable
084|*of <data_file> activated by 'G'.
085|*If more 'G' variables exist, the CLUSTER module will save as many of the
086|*best solutions found, provided that a specification TRIALS=n where n is
087|*>1 is given.
088|*The possibility for several trials is important in more complicated
089|*cases where different initial groupings may lead to different solutions.
090|*@C
091|*Other options in CLUSTER:
092|*There are no limits for the size of the data file. The highest number
093|*of variables and groups depends on the available memory space.
094|*However, it is seldom reasonable to use more than 10-20 variables in one
095|*cluster analysis.
096|*To speed up the iterative process where the data values are scanned
097|*several times, CLUSTER saves the active part of the data set in a
098|*special file SURVO.CLU on the path of the temporary files (defined
099|*by the line tempdisk in SURVO.APU).
100|*This file (path) can be replaced by another (on a RAM disk, for example)
101|*by giving a specification TEMPFILE=<filename>.
102|*In randomizations for initial groupings, the seed number of
103|*the random number generator is selected according to current time.
104|*To use a fixed generator (in order to have the possibility to repeat
105|*an experiment), a specification of the form SEED=<integer> can be
106|*given.
107|*@C
108|*Example:
109|*  Two samples from bivariate normal distribution with different means
110|*  but same covariance matrix are generated:
111|*................................................................................
112|SFILE CREATE N2,32,10,64,7,100
S  | 77777777777777777777777777777
113|*FIELDS:
114|*1 N 4 X
115|*2 N 4 Y
116|*END
118|SVAR X,Y TO N2
S  | 7777777777777
119|*X=if(ORDER<51)then(X1)else(X2) Y=if(ORDER<51)then(Y1)else(Y2)
120|*X1=Z1     Y1=r*Z1+s*Z2      r=0.8 s=sqrt(1-r*r)
121|*X2=Z1+2   Y2=r*Z1+s*Z2-2
122|*Z1=probit(rnd(2)) Z2=probit(rnd(2))
123|*................................................................................
124|SVAR G1:1,G2:1,G3:1 TO N2
S  | 777777777777777777777777
125|*  G1=0 G2=0 G3=0
126|*................................................................................
127|*(Continued on next page)
128|*@C
129|*(Example continued)
130|*  The CLUSTER operation with 10 trials, 2 groups, and random number
131|*  generator 2 gives two different solutions:
133|*MASK=AAGGG    TRIALS=10  GROUPS=2 SEED=2
134|SCLUSTER N2,CUR+1
S  | 7777777777777777
135|*Stepwise cluster analysis by Wilks' Lambda criterion
136|*Data N2  N=100
137|*Variables: X, Y
138|*Best clusterings found in 10 trials are saved as follows:
139|* Lambda     freq  Grouping var
140|* 0.04496      6   G1
141|* 0.14945      4   G2
143|*................................................................................
144|*The result can be checked by plotting the graph:
145|SGPLOT N2,X,Y / HEADER=Samples_from_bivariate_normal_distributions
S  | 777777777777
146|*POINT=G1  (G2 gives the inferior clustering)
147|*................................................................................
148|*@GOTO M
149|*M?
150|*  C = More information on cluster analysis
151|*  M = More information on multivariate analysis
152|%C=CLUSTER M=MULTI?
153|*@SELECT
155|*DCLUSTER?
156|*DCLUSTER <data>,<distance_matrix>,L
157|*performs cluster analysis by different methods.
158|*By default it is done by means of `medoids'.
159|*This technique is presented by Kaufman and Rousseeuw in 1987.
160|*See their book `Finding Groups in Data' (Wiley 1990).
161|*It seems to be more robust than the standard k-means method.
163|*The computations in DCLUSTER are based entirely on a ready-computed
164|*<distance_matrix> (obtained in Survo by the DIST operation, for
165|*example) from Survo <data>.
166|*The number of clusters is given by specification GROUPS.
167|*Default is GROUPS=2. The group indices 1,2,... are saved in <data>
168|*as a variable given by mask `G' and the (optional) `silhouette'
169|*as values of variable with mask `S'.
170|*The greatest possible number N of observations depends on the size of
171|*the central memory of the computer (NxN distance matrix has to be
172|*present). For example, in a 64MB memory N is about 2500.
173|*However, to large data (say, more than 1000 observations) the medoid
174|*method can be applied by taking random samples. This technique is
175|*supplied by the /CLARA sucro.
176|*@C
177|*DCLUSTER <data>,<distance_matrix>,L
178|*with specification METHOD=3 makes cluster analysis
179|*by the single linkage (nearest neighbour) method.
180|*The setup is otherwise similar as described above.
181|*To avoid certain weaknesses of this method like
182|*the chaining effect the distance between two groups
183|*of sizes n1 and n2 is multiplied by
184|*1+weight*[log2(min(n1,n2)+1)-1]  (suggestion of S.M. 1998)
185|*by using the specification WEIGHT=weight. Default is WEIGHT=0
186|*(i.e. standard single linkage) but WEIGHT=1 is recommended.
188|*In METHOD=3 an initial grouping 1,2,... (obtained by methoids)
189|*can be given by (another) grouping variable given by
190|*INIT=<name_of_variable>.
191|*In practice, when the expected number of cluster is, say, 2 or 3
192|*one may start by creating the medoid solution with, say, 10 groups
193|*and then the final solution is found by METHOD=3 with WEIGHT=1
194|*on the basis of this preliminary 10 group solution.
195|*@GOTO M
