SURVO 98 edit field:    81       120       20 (32 bit version)
001|*SAVE EDQM5
002|*LOAD EDQ
004|*MATCONT?
005|*MAT control and auxiliary operations:
006|*  1 = MAT NAME
007|*  2 = MAT KILL
009|*  M = More information on MAT operations
010|%1=NAME 2=KILL M=MATO?
011|*@SELECT
012|*NAME?
013|@MAT NAME <matrix file> AS <new matrix name>
014|*renames the matrix currently saved in <matrix file>. The name of the
015|*matrix file remains unaltered.
016|*MAT NAME is useful, for example, when the name of the matrix has become
017|*too long. There is no upper limit for the name length, but only 128
018|*first characters will be saved.
020|*Another way to change the name of the matrix is to write a MAT operation
021|*in the form
022|*MAT C!=A+B       / Please, note a (!) after C
023|*Then the result A+B will be saved in file C and the name of it will
024|*also be C. The same situation may be reached by the following two
025|*operations:
026|*MAT C=A+B                     / *C~A+B 10*3
027|*MAT NAME C AS C               / *C~C 10*3
028|*@G MM
029|*MM?
030|*  C = More information on MAT control operations
031|%C=MATCONT
032|*@SELECT
033|*KILL?
034|@MAT KILL <list of matrix files>
035|*deletes all matrix files in the list from the current data disk. @G MM
036|*MATTRANS?
037|*MAT TRANSFORM has two different forms:
039|@MAT TRANSFORM <matrix file> BY <function of X#>
040|*transforms each element of the matrix according to <function of X#>.
041|*For example to take natural logarithms of all elements of A, activate
042|*MAT TRANSFORM A BY LOG(X#) @C
043|@MAT TRANSFORM <X_matrix> BY <Y_matrix> AND <function of X#,Y#>
044|*transforms each element X# of <X_matrix> by <function of X#,Y#>
045|*where Y# is the corresponding element of <Y_matrix>.
046|*For example, to divide each element of A by the corresponding element of
047|*B, activate
048|*MAT TRANSFORM A BY B AND X#/Y#
049|*@C
050|*Besides current elements (X#,Y#), both forms of MAT TRANSFORM permit
051|*referring to current row and column indices by I# and J#, respectively.
052|*For example, a 10*10 matrix R of the form
054|*        1   r   r^2 ... r^9
055|*        r   1   r   ... r^8
056|*        r^2 r   1   ... r^7
057|*        ...         ...
058|*        r^9 r^8 r^7     1
060|*where r=1/2, can be created by MAT operations
062|*   11 *                      r=1/2
063|*   12 *MAT R=CON(10,10)
064|*   13 *MAT TRANSFORM R BY r^abs(I#-J#)
066|*  M = More information on MAT operations
067|%M=MATO?
068|*@SELECT
069|*MATSUP?
070|*Certain matrix operations are also permitted for large partitioned
071|*matrices, whose elements are matrix files (each containing one super-
072|*element)
073|*A supermatrix is defined always in the current edit field in the form:
074|*MATRIX A%      / % identifies a supermatrix
075|*A11 A12 A13
076|*A21 A22 A23
078|*In the example above A% is a 2x3 supermatrix. When A% appears as an
079|*operand in a supermatrix operation, all the parts A11,A12,... have to
080|*be previously saved in matrix files.
081|*If A% is a result matrix, its superelements need not to be previously
082|*defined, but the definition of A% itself must, of course, appear in the
083|*current edit field.
085|*Supermatrix operations:
086|*C%=A%
087|*C%=A%'                 / A%=A%' not permitted
088|*C%=A%+B%
089|*C%=A%-B%
090|*C%=A%*B%               / C% must be distinct from A% and B%
091|*C%=INV(A%)             / diagonal superelements must be nonsigular
092|*@C
093|*Example: Inverting a 100x100 matrix R% having all the diagonal
094|*elements =1 and the off-diagonal elements =r
095|*MATRIX R%
096|*A B B B
097|*B A B B
098|*B B A B
099|*B B B A
101|*MATRIX S%
102|*S11 S12 S13 S14
103|*S21 S22 S23 S24
104|*S31 S32 S33 S34
105|*S41 S42 S43 S44
107|*n=25 r=0.8
108|*MAT B!=CON(n,n,r)
109|*MAT A!=IDN(n,n,1-r)
110|*MAT A!=A+B
111|*MAT S%=INV(R%)
112|*  M = More information on Matrix operations
113|%M=MAT? @
114|*@SELECT
