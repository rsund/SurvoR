SURVO84ED 81 240    81 S20                                                       *SAVE EDQTU2                                                                     *LOAD EDQTU3                                                                     *                                                                                *TUTCOND?                                                                        *Conditional statements of the sucro language are working with the               *words and numbers in the sucro memory (tutstack). They refer to                 *labelled points in the program list by 'goto' statements or to other            *sucros by 'load' statements.                                                    *                                                                                *  1 = Labels, 'goto' and ' load' statements                                     *  2 = 'if' statement                                                            *  3 = 'switch' statement                                                        *                                                                                *  C = More information on control words and statements in sucro programs        %1=GOTO 2=IF 3=SWITCH C=TUTCODES?                                                *                                                                                *GOTO?                                                                           *Labels are character strings in the beginning of edit lines having '+'          ain the control column. Labels are referred to by the {goto <label>}             *statement.                                                                      *                                                                                * + Part2: <sucro code continued>                                                *                    with '+' in the control column gives label 'Part2'.         *                    The colon ':' and the space after it belong to the          *                    label notation.                                             *                                                                                a  {goto Part2}      Go to the place indicated by label 'Part2'.                 *                                                                                *In many cases, it is wise to split a large sucro into several parts.            aNew sucro is linked during the run by a {load <sucro>} command:                 *                                                                                a  {load Cont}       Continue with another sucro 'Cont'.                         *                    The contents of the tutstack and other system               *                    parameters are preserved.                                   *@G S                                                                            *S?                                                                              *                                                                                *   S = More information on conditional statements                               *   C = Code words and statements in sucros                                      %S=TUTCOND C=TUTCODES?                                                           *                                                                                *IF?                                                                             *'if' statement:                                                                 *Words and numbers in the tutstack are compared to each other and to constants   *both as numbers and as strings by 'if' statements which are written             *on edit lines having a '-' in the control column.                               *In string comparisons, the relational symbol must be given in inverted          *commas.                                                                         *                                                                                *The general form is                                                             * - if <condition> then goto <label>                                             *or                                                                              * - if <condition> then load <another_sucro>                                     *                                                                                *where <condition> is a relation between tutstack words and constants.           *Also an augmented form with an 'else' clause is available.                      *@C                                                                              *Examples:                                                                       * - if W1 '=' Tue then goto Tuesday                                              *      If W1 contains string "Tue", sucro will continue from label 'Tuesday'.    *                                                                                * - if W2 < W3 then load EX1 else goto End                                       *      If number in W2 is less than number in W3, call another sucro EX1         *      else go to label 'End'.                                                   *                                                                                a - if Wstr '=' {} then goto A                                                   a - if Wstr '<>' {sp} then goto B                                                *      If Wstr is empty, goto 'A'. If Wstr is not a space character,             *      goto 'B'.                                                                 *                                                                                *Permitted relational symbols are =, <, <=, >, >=, and <> .                      *@C                                                                              *In SURVO MM, numerical conditions in if statements of sucros can be            C*more general:                                                                  C*Example:                                                                        *                                                                                *  / def Wheight=W1 Wlength=W2                                                   *  ...                                                                           *  - if Wheight > 2*Wlength then goto A                                          *  - if Wheight*Wlength = 4000 then goto B                                       *  - if 100/Wlength > 0.7 then goto C else goto D                                *  ...                                                                           *                                                                                *Thus on both sides of the condition, sums, differences, products,               *and ratios of two operands may appear.                                          *@G S                                                                            *                                                                                *SWITCH?                                                                         *Several alternatives can be processed simultaneously by a 'switch'              *statement:                                                                      *Assume that current weekday has been obtained in W1 as one of the               *abbreviations Sun,Mon,...  The following part of a sucro writes                 *a proper sentence 'Today is Sunday.', etc.                                      *@C                                                                              *Example:                                                                        * 11 *Today is                                                                   * 12 - switch W1                                                                 * 13 -   case Sun: goto Sun                                                      * 14 -   case Mon: goto Mon                                                      * 15 -   case Tue: goto Tue                                                      * 16 -   case Wed: goto Wed                                                      * 17 -   case Thu: goto Thu                                                      * 18 -   case Fri: goto Fri                                                      * 19 -   case Sat: goto Sat                                                      a 20 + Sun:  Sunday{goto End}                                                    a 21 + Mon:  Monday{goto End}                                                    a 22 + Tue:  Tuesday{goto End}                                                   a 23 + Wed:  Wednesday{goto End}                                                 a 23 + Thu:  Thursday{goto End}                                                  a 25 + Fri:  Friday{goto End}                                                    a 26 + Sat:  Saturday{goto End}                                                  a 27 + End: .{end}                                                               *@G S                                                                            *                                                                                *TUTPROM?                                                                        *User interaction in sucros:                                                     *                                                                                *Prompts for the user are presented by the 'prompt' and 'on key'                 *statements.                                                                     *                                                                                *  1 = 'prompt' statement                                                        *  2 = 'on key' statement                                                        *  3 = User interaction during Survo operations                                  *                                                                                *  C = More information on control words and statements in sucro programs        %1=PROMPT 2=ONKEY 3=INTER C=TUTCODES?                                            *                                                                                *PROMPT?                                                                         *The 'prompt' statement in sucros has the general form (all lines are starting   *by '-' in the control column):                                                  *                                                                                a  - prompt <Question text ?> {}                                                 a  -   default <default answer, text or tutstack word>                           a  -   answer  <name of tutstack word for the answer (optional)>                 a  -   length  <max. length of the answer>                                       a  -   wait    <max. waiting time in 0.1 seconds, integer or tutstack word>      *                                                                                *The prompt line displays the text intended as a question.                       *The optional answer line gives the place of the answer in the tutstack.         *If the answer line is missing, the answer is appended as the last word          *to the tutstack.                                                                *If the user gives no answer, the sucro waits until the time qiven on            *the wait line is over and accepts the default answer which also can             *be a tutstack word.                                                             *Although the question and the answer are displayed on the screen in             *the current context of the edit field, they are not permanently written         *into the edit field.                                                            *The prompt can be interrupted by the ESC key. Then the text '(break)'           *will appear as an answer.                                                       *@C                                                                              *Example:                                                                        *This part of a sucro prompts the user to give his/her age and writes            *a sentence as a comment of the answer.                                          *                                                                                a 12 - prompt Your age ?                        / question                       a 13 -   default 0                              / default answer                 * 14 -   answer W1                              / place for the answer           a 15 -   length 3                               / length of the answer           a 16 -   wait 1000                              / max. waiting time              a 17 - if W1 < 3 then goto Too_young            / comparing answer W1            a 18 - if W1 > 99 then goto Too_old             / with 3 and 99                  a 19 *{R}                                                                        a 20 *Your age is {print W1}.{goto End}         / displaying answer              a 21 + Too_young: {R}                                                            a 22 *Are you so young really?{goto End}                                         a 23 + Too_old: {R}                                                              a 24 *Hard to believe that you are so old!                                       a 25 + End: {end}                                                                *@G P                                                                            *P?                                                                              *                                                                                *   U = More information on user interaction                                     *   C = Code words and statements in sucros                                      %U=TUTPROM C=TUTCODES?                                                           *                                                                                *ONKEY?                                                                          *'on key' statement makes possible to branch in a sucro according to             *the key pressed by the user as shown in this example:                           *                                                                                * 11 *Continue (Y/N) ?                                                           * 12 - on key                                                                    * 13 -    key N: goto End                                                        * 14 -    key n: goto End                                                        * 15 -    key Y: continue                                                        * 16 -    key y: continue                                                        * 17 - wait 300                                                                  a 18 *{home}{erase}Thus we are continuing...                                     *                                                                                *Here the sucro prompts the user to press one key by displaying                  *    Continue (Y/N) ?_                                                           *If the user presses N or n, the sucro goes to label 'End'. If the               *user presses Y or y, the process continues from the first line (18)             *without a '-' in the control column.                                            *The 'wait' line (17) indicates the maximum waiting time for the answer.         *If any other key is pressed or no answer is given, the first case (N)           *is selected.                                                                    *@C                                                                              *In the 'on key' statement, also the following special keys may be tested:       *ENTER, RIGHT, LEFT, UP, DOWN, HOME, HELP, ESC,                                  *SP, COLON, INSERT, INS_LINE, DELETE, DEL_LINE, ERASE, NEXT, PREV, DISK,         *BACKSP, REF, MERGE, COPY, TAB, HELP, SRCH, ACTIV, MOVE, END, WORDS.             *                                                                                *Also calling other sucros by 'load <sucro>' is permitted:                       *                                                                                a 11 *  A=Continuation{R}                                                        a 12 *  B=Alternative B{R}                                                       a 13 *  C=Alternative C{R}                                                       * 14 *Select one of the alternatives A,B,C:                                      * 15 - on key                                                                    * 16 -    key ENTER: continue                                                    * 17 -    key A: continue                                                        * 18 -    key B: goto B1                                                         * 19 -    key C: load CSUCRO                                                     * 20 - wait 300                                                                  a 21 *{R}{erase}...                                                              *@G P                                                                            *                                                                                *INTER?                                                                          *User interaction during Survo operations                                        *                                                                                *When a Survo operation involving user interaction (like FILE SHOW) is           *activated in a sucro, the sucro in question normally takes the                  *responsibility of all actions of the user (like entering data values in         *FILE SHOW) during that operation.                                               *However, in some applications, it is useful that the sucro stands still         *during such an operation thus letting the user to work on his/her own           *until the end of the operation. For example, one would like to create           *a data entry routine as a sucro using the FILE SHOW operation for               *actual data input as such. To enable this kind of user interaction              ain a sucro, the code word {interaction on} should be given in the               asucro code before activating the operation in question by {act}.                *To resume the default working mode of sucros, the code word                     a{interaction off} must given after {act}.                                       *                                                                                *Example:                                                                        aFILE SHOW {print Wdata}{interaction on}{act}{interaction off}                   *@G P                                                                            *                                                                                *                                                                                *                                                                                END                                                                              