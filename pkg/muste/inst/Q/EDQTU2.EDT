SURVO 98 edit field:    81       240       20 (32 bit version)
001|*SAVE EDQTU2
002|*LOAD EDQTU3
004|*TUTCOND?
005|*Conditional statements of the sucro language are working with the
006|*words and numbers in the sucro memory (tutstack). They refer to
007|*labelled points in the program list by 'goto' statements or to other
008|*sucros by 'load' statements.
010|*  1 = Labels, 'goto' and ' load' statements
011|*  2 = 'if' statement
012|*  3 = 'switch' statement
014|*  C = More information on control words and statements in sucro programs
015|%1=GOTO 2=IF 3=SWITCH C=TUTCODES?
017|*GOTO?
018|*Labels are character strings in the beginning of edit lines having '+'
019|ain the control column. Labels are referred to by the {goto <label>}
020|*statement.
022|* + Part2: <sucro code continued>
023|*                    with '+' in the control column gives label 'Part2'.
024|*                    The colon ':' and the space after it belong to the
025|*                    label notation.
027|a  {goto Part2}      Go to the place indicated by label 'Part2'.
029|*In many cases, it is wise to split a large sucro into several parts.
030|aNew sucro is linked during the run by a {load <sucro>} command:
032|a  {load Cont}       Continue with another sucro 'Cont'.
033|*                    The contents of the tutstack and other system
034|*                    parameters are preserved.
035|*@G S
036|*S?
038|*   S = More information on conditional statements
039|*   C = Code words and statements in sucros
040|%S=TUTCOND C=TUTCODES?
042|*IF?
043|*'if' statement:
044|*Words and numbers in the tutstack are compared to each other and to constants
045|*both as numbers and as strings by 'if' statements which are written
046|*on edit lines having a '-' in the control column.
047|*In string comparisons, the relational symbol must be given in inverted
048|*commas.
050|*The general form is
051|* - if <condition> then goto <label>
052|*or
053|* - if <condition> then load <another_sucro>
055|*where <condition> is a relation between tutstack words and constants.
056|*Also an augmented form with an 'else' clause is available.
057|*@C
058|*Examples:
059|* - if W1 '=' Tue then goto Tuesday
060|*      If W1 contains string "Tue", sucro will continue from label 'Tuesday'.
062|* - if W2 < W3 then load EX1 else goto End
063|*      If number in W2 is less than number in W3, call another sucro EX1
064|*      else go to label 'End'.
066|a - if Wstr '=' {} then goto A
067|a - if Wstr '<>' {sp} then goto B
068|*      If Wstr is empty, goto 'A'. If Wstr is not a space character,
069|*      goto 'B'.
071|*Permitted relational symbols are =, <, <=, >, >=, and <> .
072|*@C
073|*In SURVO MM, numerical conditions in if statements of sucros can be            C
074|*more general:                                                                  C
075|*Example:
077|*  / def Wheight=W1 Wlength=W2
078|*  ...
079|*  - if Wheight > 2*Wlength then goto A
080|*  - if Wheight*Wlength = 4000 then goto B
081|*  - if 100/Wlength > 0.7 then goto C else goto D
082|*  ...
084|*Thus on both sides of the condition, sums, differences, products,
085|*and ratios of two operands may appear.
086|*@G S
088|*SWITCH?
089|*Several alternatives can be processed simultaneously by a 'switch'
090|*statement:
091|*Assume that current weekday has been obtained in W1 as one of the
092|*abbreviations Sun,Mon,...  The following part of a sucro writes
093|*a proper sentence 'Today is Sunday.', etc.
094|*@C
095|*Example:
096|* 11 *Today is
097|* 12 - switch W1
098|* 13 -   case Sun: goto Sun
099|* 14 -   case Mon: goto Mon
100|* 15 -   case Tue: goto Tue
101|* 16 -   case Wed: goto Wed
102|* 17 -   case Thu: goto Thu
103|* 18 -   case Fri: goto Fri
104|* 19 -   case Sat: goto Sat
105|a 20 + Sun:  Sunday{goto End}
106|a 21 + Mon:  Monday{goto End}
107|a 22 + Tue:  Tuesday{goto End}
108|a 23 + Wed:  Wednesday{goto End}
109|a 23 + Thu:  Thursday{goto End}
110|a 25 + Fri:  Friday{goto End}
111|a 26 + Sat:  Saturday{goto End}
112|a 27 + End: .{end}
113|*@G S
115|*TUTPROM?
116|*User interaction in sucros:
118|*Prompts for the user are presented by the 'prompt' and 'on key'
119|*statements.
121|*  1 = 'prompt' statement
122|*  2 = 'on key' statement
123|*  3 = User interaction during Survo operations
125|*  C = More information on control words and statements in sucro programs
126|%1=PROMPT 2=ONKEY 3=INTER C=TUTCODES?
128|*PROMPT?
129|*The 'prompt' statement in sucros has the general form (all lines are starting
130|*by '-' in the control column):
132|a  - prompt <Question text ?> {}
133|a  -   default <default answer, text or tutstack word>
134|a  -   answer  <name of tutstack word for the answer (optional)>
135|a  -   length  <max. length of the answer>
136|a  -   wait    <max. waiting time in 0.1 seconds, integer or tutstack word>
138|*The prompt line displays the text intended as a question.
139|*The optional answer line gives the place of the answer in the tutstack.
140|*If the answer line is missing, the answer is appended as the last word
141|*to the tutstack.
142|*If the user gives no answer, the sucro waits until the time qiven on
143|*the wait line is over and accepts the default answer which also can
144|*be a tutstack word.
145|*Although the question and the answer are displayed on the screen in
146|*the current context of the edit field, they are not permanently written
147|*into the edit field.
148|*The prompt can be interrupted by the ESC key. Then the text '(break)'
149|*will appear as an answer.
150|*@C
151|*Example:
152|*This part of a sucro prompts the user to give his/her age and writes
153|*a sentence as a comment of the answer.
155|a 12 - prompt Your age ?                        / question
156|a 13 -   default 0                              / default answer
157|* 14 -   answer W1                              / place for the answer
158|a 15 -   length 3                               / length of the answer
159|a 16 -   wait 1000                              / max. waiting time
160|a 17 - if W1 < 3 then goto Too_young            / comparing answer W1
161|a 18 - if W1 > 99 then goto Too_old             / with 3 and 99
162|a 19 *{R}
163|a 20 *Your age is {print W1}.{goto End}         / displaying answer
164|a 21 + Too_young: {R}
165|a 22 *Are you so young really?{goto End}
166|a 23 + Too_old: {R}
167|a 24 *Hard to believe that you are so old!
168|a 25 + End: {end}
169|*@G P
170|*P?
172|*   U = More information on user interaction
173|*   C = Code words and statements in sucros
174|%U=TUTPROM C=TUTCODES?
176|*ONKEY?
177|*'on key' statement makes possible to branch in a sucro according to
178|*the key pressed by the user as shown in this example:
180|* 11 *Continue (Y/N) ?
181|* 12 - on key
182|* 13 -    key N: goto End
183|* 14 -    key n: goto End
184|* 15 -    key Y: continue
185|* 16 -    key y: continue
186|* 17 - wait 300
187|a 18 *{home}{erase}Thus we are continuing...
189|*Here the sucro prompts the user to press one key by displaying
190|*    Continue (Y/N) ?_
191|*If the user presses N or n, the sucro goes to label 'End'. If the
192|*user presses Y or y, the process continues from the first line (18)
193|*without a '-' in the control column.
194|*The 'wait' line (17) indicates the maximum waiting time for the answer.
195|*If any other key is pressed or no answer is given, the first case (N)
196|*is selected.
197|*@C
198|*In the 'on key' statement, also the following special keys may be tested:
199|*ENTER, RIGHT, LEFT, UP, DOWN, HOME, HELP, ESC,
200|*SP, COLON, INSERT, INS_LINE, DELETE, DEL_LINE, ERASE, NEXT, PREV, DISK,
201|*BACKSP, REF, MERGE, COPY, TAB, HELP, SRCH, ACTIV, MOVE, END, WORDS.
203|*Also calling other sucros by 'load <sucro>' is permitted:
205|a 11 *  A=Continuation{R}
206|a 12 *  B=Alternative B{R}
207|a 13 *  C=Alternative C{R}
208|* 14 *Select one of the alternatives A,B,C:
209|* 15 - on key
210|* 16 -    key ENTER: continue
211|* 17 -    key A: continue
212|* 18 -    key B: goto B1
213|* 19 -    key C: load CSUCRO
214|* 20 - wait 300
215|a 21 *{R}{erase}...
216|*@G P
218|*INTER?
219|*User interaction during Survo operations
221|*When a Survo operation involving user interaction (like FILE SHOW) is
222|*activated in a sucro, the sucro in question normally takes the
223|*responsibility of all actions of the user (like entering data values in
224|*FILE SHOW) during that operation.
225|*However, in some applications, it is useful that the sucro stands still
226|*during such an operation thus letting the user to work on his/her own
227|*until the end of the operation. For example, one would like to create
228|*a data entry routine as a sucro using the FILE SHOW operation for
229|*actual data input as such. To enable this kind of user interaction
230|ain a sucro, the code word {interaction on} should be given in the
231|asucro code before activating the operation in question by {act}.
232|*To resume the default working mode of sucros, the code word
233|a{interaction off} must given after {act}.
235|*Example:
236|aFILE SHOW {print Wdata}{interaction on}{act}{interaction off}
237|*@G P
