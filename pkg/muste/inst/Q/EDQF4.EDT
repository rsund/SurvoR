SURVO 98 edit field:    81       200       20 (32 bit version)
001|*SAVE EDQF4
002|*LOAD EDQ
003|*FACTIV?
004|*After a Survo data file has been created all the fields are active
005|*and unprotected.
006|*When a field is active, it will be used and it will be displayed in
007|*all Survo operations which treat the data file as a whole.
008|*When a field is unprotected, its values can be changed.
010|*To change the status of the fields with respect to these properties,
011|*a FILE ACTIVATE operation is used. Since this operation is very common,
012|*it can be started for the current data file also simply by pressing
013|*FILE_ACT (alt-F6).
014|*When activating and protecting fields we have a display where one
015|*line is reserved for each field of the data file. If there are more
016|*than 20 fields, several pages of a similar type will be available. @C
017|*For example, in case of the COMMUNES file (see FILE CREATE) this display
018|Scould be following: (The emphasized character indicates the cursor.)
S  |                          5555555555
019|*------------------------------------------------------------------------
020|*Data file: COMMUNES M= 14 Col= 1   M(active)=  5  M(protected)=  0
021|S   1 A-  Commune  Name of the commune
S  |      5
022|*   2 A-  Province UUS,TUR,AHV,HŽM,KYM,MIK,KAR,KUO,KES,VAA,OUL,LAP
023|*   3 A-  People   Population 1.1.1980 (######) {{100,500000}
024|*   4 A-  Births   Live births in 1978 (####) {{0,6000}
025|*   5 A-  Area     Land area km^2 1.1.1979 (#####.##)
027|*Denote passive variables by - and active by A,X,Y etc.  Stop by EXIT!
029|*------------------------------------------------------------------------
030|*After the field number a set of mask columns (now filled with A--)
031|*are displayed and these columns can now be edited simply by moving the
032|*cursor and overtyping.
033|*The first column (now filled by A's) is meant for activation. Usually
034|*all symbols except '-' indicate an active field, but in some operations
035|*different symbols tell more about the role of the field. For example,
036|*in linear regression analysis (LINREG) 'Y' is a regressand, 'X' is
037|*a regressor, 'R' is a residual variable, etc.
038|*@C
039|*The second one-character column is for protection of the fields.
040|*It is originally filled with '-'s which means that no field is protected
041|*and its values can be changed. To protect a field, simply move the
042|*cursor to that column and put 'P' instead of '-'.
043|*For example, the display below indicates a situation where the fields
044|*'People', 'Births' and 'Area' are active and the fields 'Commune',
045|*'Province' and 'People' are protected:
046|*------------------------------------------------------------------------
047|*Data file: COMMUNES M= 14 Col= 2   M(active)=  4  M(protected)=  3
048|S   1 -P  Commune  Name of the commune
S  |       5
049|*   2 AP  Province UUS,TUR,AHV,HŽM,KYM,MIK,KAR,KUO,KES,VAA,OUL,LAP
050|*   3 AP  People   Population 1.1.1980 (######) {{100,500000}
051|*   4 A-  Births   Live births in 1978 (####) {{0,6000}
052|*   5 A-  Area     Land area km^2 1.1.1979 (#####.##)
054|*Denote protected variables by P. Stop by EXIT!
056|*------------------------------------------------------------------------
057|*@C
058|*As an option the scale types of the statistical variables can be given
059|*as mask column 3. By default this column is empty.
060|*More information about scale types is found by SCALES?.
061|*------------------------------------------------------------------------
062|*Data file: COMMUNES M= 14 Col= 3   M(active)=  4  M(protected)=  3
063|*   1 -P- Commune  Name of the commune
064|S   2 APN Province UUS,TUR,AHV,HŽM,KYM,MIK,KAR,KUO,KES,VAA,OUL,LAP
S  |        5
065|*   3 APF People   Population 1.1.1980 (######) {{100,500000}
066|*   4 A-F Births   Live births in 1978 (####) {{0,6000}
067|*   5 A-R Area     Land area km^2 1.1.1979 (#####.##)
069|*Enter scale types: N=nominal, O=order, I=interval, R=ratio, -=no
071|*------------------------------------------------------------------------
072|*@C
073|*Additional mask columns become visible by pressing ESC.
074|*These columns can be used to save various selections of variables
075|*and they are referred to by the MASK specification of the form
076|*MASK=#7 (=mask column 7) in Survo operations.
077|*The mask columns can be interchanged during file activation by the
078|*COPY key.
079|*A typical situation after pressing ESC is displayed. Here the mask
080|*column 7 is being edited.
081|*------------------------------------------------------------------------
082|*Data file: COMMUNES M= 14 Col= 7   M(active)=  4  M(protected)=  3
083|*   1 -P---A- Commune  Name of the commune
084|*   2 APN---- Province UUS,TUR,AHV,HŽM,KYM,MIK,KAR,KUO,KES,VAA,OUL,LAP
085|S   3 APF--AX People   Population 1.1.1980 (######) {{100,500000}
S  |            5
086|*   4 A-F--AX Births   Live births in 1978 (####) {{0,6000}
087|*   5 A-R--AY Area     Land area km^2 1.1.1979 (#####.##)
089|*To stop, press EXIT!
090|*------------------------------------------------------------------------
091|*More information during file activation mode is obtained by the HELP key.      C
092|*  M = MASK operation/specification for dynamic activation
093|*  D = More information on data management
094|%M=MASK? D=FILE?
096|*FSORT?
097|@FILE SORT <data file> BY <list of sort keys> TO <new data file>
098|*where <list of sort keys> has the form  <field 1>,<field 2>,...
099|*sorts the observations of <data file> in the order specified by
100|*<list of sort keys> and places the sorted data to <new data file>.
101|*In <list of sort keys> <field 1> is the primary sort key, <field 2>
102|*the secondary one, etc.
103|*In case of a numeric field (sort key) the data is sorted in ascending
104|*order. However, a '-' in front of the sort key causes the data to be
105|*sorted in descending order.
106|*In case of a string field as a sort key, any part of the field can be used
107|*by indicating the first and last byte in the form
108|*<name_of the_field>[<first_byte>:<last_byte>].
110|*For example,
111|*FILE SORT COMMUNES BY Province[1:3],-People TO B:COMSORT
112|*sorts the data in COMMUNES primarily with respect to counties
113|*using the 3 first letters as the sort key and then within the
114|*counties in descending order with respect of 'People'.
116|*In case of ties the original order will be preserved.
117|*@C
118|*If string fields appear as a part of the sort key, the characters
119|*are sorted according to the order specified by a FILTER=<code_file>
120|*specification. In <code_file> the complete pathname must be given.
121|*Default is FILTER=SORTCODE.BIN which equates lower case letters to upper
122|*case ones.
123|*You may study existing code files (extension .BIN) and create new code
124|*files by using the CODES SAVE and CODES LOAD operations.
125|*If no cases are active, an error message is displayed. This message is         C
126|*avoided and an empty <new data file> created by specification SAVE=1.          C
127|*As an option, a limited number of the records in the sorted data are
128|*moved to <new data file>. By giving NSORT=k, only k first of the
129|*sorted records are moved.
130|*This is an useful option when FILE SORT is used for taking random
131|*samples. Then random variable, say R, is computed by VAR R=rnd(0)
132|*and the data is sorted with respect of R by
133|*FILE SORT <data file> BY R TO <new data file>  / NSORT=<samplesize>
134|*  F = Additional specifications for space allocation & intermediate files
135|*  D = More information on data management
136|*  C = CODES operations
137|*  S = Sorting of lines in the edit field
138|*  A = Saving the sort keys                                                     C
139|%F=FSORT2? D=FILE? C=CODES? S=SORT? A=SAVESORT?
140|*@SELECT
142|*FINIT?
143|@FILE INIT <data_file>,N
144|*adds N new missing observations to the end of <data_file>.
145|*Since, for example, VAR operates on existing observations only,
146|*FILE INIT can be used for making space for simulated data etc.
148|*  D = More information on data management
149|%D=FILE?
150|*@SELECT
152|*FMASK?
153|@FILE MASK <data>,<1st_var>,<mask_column>,<masks>
154|*writes <masks> in <mask_column> from <1st_var> onwards.
155|*Example: FILE MASK DATA1,CASE,1,---
156|*makes variable CASE and two next ones passive (-) in data file DATA1.
158|*Other forms of FILE MASK:
159|*FILE MASK DATA1,VAR3,1,A...
160|*sets mask A (in mask column 1) for variables from VAR3 onwards.
161|*FILE MASK DATA1,#2,3,P...                                                      C
162|*sets mask P (in mask column 3) for variables from variable #2 onwards,         C
163|*i.e. protects them.                                                            C
164|*FILE MASK DATA1,(XYZ),1,A                                                      C
165|*sets mask A (in mask column 1) for variables activated by X,Y, or Z.           C
166|*@C
167|*FILE MASK with a MASKING list: (Example)                                       C
169|*FILE MASK DECA,M1,1
170|*                      Comments
171|*MASKING M1
172|*Points:           Y / Regressand Points
173|*100m-400m,Weight: X / Regressors 100m,L_jump,Shot_put,L_jump,400m,Weight
174|*RES:              R / Residuals  RES
175|*OTHERS:           -
176|*END
178|*Also indices of variables can be used. Thus in DECA, #3-#7 is the same
179|*as 100m-400m.
181|*  D = More information on data management
182|%D=FILE?
