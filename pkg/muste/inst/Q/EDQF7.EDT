SURVO84ED 81 350    81 S20                                                       *SAVE EDQF7                                                                      *LOAD EDQ                                                                        *GOTO X                                                                          *FLOAD?                                                                          *FILE LOAD for loading data to the edit field or to a text file                  *                                                                                *  1 = Loading observations of active fields (standard alternative)              *  2 = Loading names of variables conditionally on observed values              C%1=FLOAD1 2=FLOAD2                                                               *                                                                                *FLOAD1?                                                                         @FILE LOAD <Survo_data_file>,L                                                   *loads the active fields of the data file in the edit field from the line        *L onwards. If L is omitted, the next edit line is used. IND and CASES           *specifications are also available. To indicate the fields to be loaded,         *a MASK specification may be used. If the name of the data file is               *preceded by a '-', the header lines are not printed in front of the data        *values.                                                                         *                                                                                *Missing values are shown as '-'s. Any <string> may be used as a missing        C*value indicator in the output by giving specification MISSING=<string>.        C*This option applies to numeric fields only.                                    C*Example: MISSING=***                                                           C*                                                                                *Unwanted characters are skipped by                                             C*SKIP=<list_of_characters>. Example: SKIP=,"                                    C*@C                                                                              @FILE LOAD <Survo_data_file> TO <text_file>                                      *moves the active fields of the data file to a text file.                        *Also the header lines telling the name of the data file and the names           *of the fields will be moved.                                                    *If <Survo_data_file> is preceded by a '-', the header lines are                 *not moved. This is useful in situations where several parts of a data           *file has to be copied in a single text file.                                    *Each record will appear as a line terminated by a line feed character.          *@C                                                                              *In both forms above, fields in the output will be separated by a                *space character. To use another character instead of a space, give              *DELIMITER=<character>. Then all fields, except the the last one, will           *be terminated by <character>. To terminate the last field as well               *with <character>, give DELIMITER=<character>,1 .                                *DELIMITER=TAB is the same as DELIMITER=char(9).                                 *If DELIMITER is used, both leading and trailing space characters                *in each field are replaced by a character given by                              *SPACE=<space_character>. Those characters can be erased thereafter by TXTCONV.  *                                                                                *The spaces and commas in string variables may be replaced by other             C*characters by using specifications STR_SPACE and STR_COMMA, respectively.      C*For example, STR_SPACE=_ STR_COMMA=; makes the output suitable for             C*plotting it as texts and labels (in GPLOT and PLOT).                           C*                                                                                *By default names of fields are truncated according to the current format.       *By NAMES8=1 field names are copied to the normal length of 8 characters.        *NAMES8=2 works like NAMES8=1 but replaces the name of the first variable       C*by blanks. This a useful option in making data tables for R, for example.     C *@C                                                                              *The default format of the output is a data matrix (table). Other formats        *may be selected by a FORMAT specification. It has 3 different forms:            *1.  FORMAT=ORDER:<field_1>,<field_2>,...                                        *    reorders the fields for output.                                             *2.  FORMAT=LIST                                                                 *    gives the output in the form of a data list.                                *                                                                                *3.  FORMAT=<name_of_format>                                                     *    specifies that a special (multiline) format given in the current            *    edit field is to be used. This format has to be given in the form:          *                                                                                *    FORMAT <name_of_format>                                                     *         one or several lines containing free text and field                    *         descriptions of form    name_of_field: ###.##                          *         or [name_of_field]                                                     *    END                                                                         *                                                                                *    If ###.## is missing, the default format for the field is used.             *    In the latter case (name in brackets []) the default format is              *    always used and the value overwrites the name of the field.                 *@C                                                                              *Example: (Results of FILE LOAD on line 41 appear from line 48 onwards.)         *                                                                                S 41 *FILE LOAD FINLAND,48 / FORMAT=PLAN1                                        * 42 *FORMAT PLAN1                                                               * 43 *[Commune]                    [Province]                                    * 44 +[Popul]          [Births]                                                  * 45 *--------------------------------------                                     * 46 *END                                                                        * 47 *                                                                           * 48 *Helsinki                     UUS                                           * 49 +483057           5851                                                      * 50 *--------------------------------------                                     * 51 *Tampere                      HŽM                                           * 52 +165453           2084                                                      * 53 *--------------------------------------                                     * 54 *Turku                        TUR                                           * 55 +164081           2330                                                      * 56 *--------------------------------------                                     *     etc.                                                                       *                                                                                *@C                                                                              *Fields in format lines (lines 43-45 in the preceding example) can have          *various display attributes (shadow characters) and these attributes             *will be copied to each result line correspondingly. In this case,               *make sure that there is room enough for new shadow lines by using               *the REDIM command. Also control characters of format lines are copied.          *These features are valid only when data is loaded into the edit field.          *                                                                                *In the output of FILE LOAD, a code conversion is carried out by                 *a specification FILTER=<conversion_file> where the 256 first bytes              *of the conversion file defines a characterwise mapping. This file               *is generated by using a CODES SAVE command (See CODES?).                        *                                                                                *In this conversion, certain characters (usually blanks) are skipped             *(left out) by mapping them to decimal value 0.                                  *                                                                                *  D = More information on data management                                       %D=FILE?                                                                         *@SELECT                                                                         X                                                                                *FLOAD2?                                                                         @FILE LOAD <Survo_data_file>,L                                                   *with specification                                                              *LIST_VARIABLES=<case_var>,<lower_limit>,<upper_limit>                           *and with optional MASK,VARS,IND,CASES,SELECT specifications                     *lists field names (<case_var>) of selected observations                         *and for each observation the names of variables having values                   *within the range (<lower_limit>,<upper_limit>).                                 *................................................................................*Example: Best events for the 7 first competitors in Decathlon:                  *IND=ORDER,1,7                / Select cases                                     *MASK=--AAAAAAAAAA            / Select variables                                 *LIST_VARIABLES=Name,900,2000 / List variables with values >=900                 *FILE LOAD <Survo>\U\D\DECA,CUR+1                                                *Skowrone: L_jump Hurdles Pole_vlt                                               *Hedmark : Hurdles Javelin                                                       *Le_Roy  : L_jump Pole_vlt                                                       *Zeilbaue: L_jump Pole_vlt                                                       *Zigert  : Shot_put Pole_vlt                                                     *Bennett : 100m 400m Pole_vlt                                                    *Blinjaje: Pole_vlt                                                              *................................................................................*@C                                                                              *By default the names are listed in the short form (max. 8 characters).          *The names can also be listed with their extensions by giving an extra           *parameter T in LIST_VARIABLES.                                                  *Then, if this extension contains also a format string of the form               *(##.###), for example, as the L_jump variable in DECA in the form               a  L_jump   Long jump                   (####) {500,1200}                        *the #'s are replaced by the value of the variable.                              *................................................................................*Example: Best events for the 2 first competitors in Decathlon:                  *IND=ORDER,1,2                / Select cases                                     *MASK=--AAAAAAAAAA--------                                                       *LIST_VARIABLES=Name,900,2000,T / List variables with values >=900               *FILE LOAD <Survo>\U\D\DECA,CUR+1                                                *Skowrone                                                                        a  L_jump   Long jump                   ( 931) {500,1200}                        a  Hurdles  110 meters hurdles          ( 903) {500,1200}                        a  Pole_vlt Pole vault                  ( 981) {500,1200}                        *Hedmark                                                                         a  Hurdles  110 meters hurdles          ( 914) {500,1200}                        a  Javelin                              ( 975) {500,1200}                        *................................................................................*@C                                                                              *Limits <lower_limit>,<upper_limit> are the same for each variable by            *default. In any variable, however, these values may be replaced                 *separately by giving a specification                                            *<name_of_variable>=<lower_limit>,<upper_limit>                                  *................................................................................*Example:                                                                        *IND=ORDER,1,7                                                                   *MASK=--AAAAAAAAAAAA------                                                       *LIST_VARIABLES=Name,900,2000                                                    *Height=195,210 Weight=90,130 / Special limits for Height and Weight             *FILE LOAD <Survo>\U\D\DECA,CUR+1                                                *Skowrone: L_jump Hurdles Pole_vlt                                               *Hedmark : Hurdles Javelin Height Weight                                         *Le_Roy  : L_jump Pole_vlt Weight                                                *Zeilbaue: L_jump Pole_vlt                                                       *Zigert  : Shot_put Pole_vlt Height Weight                                       *Bennett : 100m 400m Pole_vlt                                                    *Blinjaje: Pole_vlt Weight                                                       *                                                                                *  D = More information on data management                                       %D=FILE?                                                                         *                                                                                *AGG?                                                                            *Aggregation of observations in a Survo data file                                *                                                                                *There are two operations for this task, FILE AGGRE and FILE AGGR                *with different options. Since they both require using of other                  *FILE operations, the easiest way for typical aggregations is provided           *by the sucro /AGGRE which combines FILE AGGR with other necessary               *actions automatically.                                                          *                                                                                *  1 = /AGGRE                                                                    *  2 = FILE AGGRE                                                                *  3 = FILE AGGR                                                                 *                                                                                %1=/AGGRE? 2=AGGRE 3=AGGR                                                        *                                                                                *AGGRE?                                                                          @FILE AGGRE <Survo_data_file>,<new_aggregated_file>                              *combines observations in a Survo data file according to values                  *of a selected grouping variable. Only variables activated by 'A'                *will be processed. The observations can be weighted by a selected               *variable activated by 'W'.                                                      *                                                                                *Aggregation is controlled by an extra specification AGGRE having the            *form AGGRE=<grouping variable>,<SUM or MEAN>.                                   *The observations with the same value in <grouping variable> are combined        *either by summing the values of variables (SUM) or by computing their           *mean values (MEAN). If missing values occur in any active variable,             *the observation in question is left out.                                        *                                                                                *The aggregated observations are saved in a new Survo data file with             *the same structure as the original data file. If <new_aggregated_file>          *already exists, it is overwritten.                                              *                                                                                *To save the frequencies (or sums of weights, if 'W' variable exists),           *a specification FREQ=<name_of_variable> can be entered. This variable           *will be automatically created for the new aggregated file.                      *@C                                                                              *                                                                                *Example:                                                                        *MASK=--W--AAA-AAA---     / 'Popul' is weight variable                           *FILE AGGRE FINLAND,PROVS                                                        *AGGRE=Province,MEAN  FREQ=Popul                                                 *                                                                                *computes weighted means of 6 variables in provinces of Finland.                 *The aggregated data set is saved in a new data file PROVS.                      *Total population of each province will appear as 'Popul' in PROVS.              *                                                                                *  D = More information on data management                                       *                                                                                %D=FILE?                                                                         *@SELECT                                                                         *                                                                                *AGGR?                                                                           @FILE AGGR <data> BY <aggr_variable> TO <new_data_file>                          *with a VARIABLES list forms a new data file                                     *by aggregating consecutive observations (with a same value                      *in <aggr_variable>) according to different rules (functions).                   *                                                                                *The VARIABLES list is given below the FILE AGGR operation line in the form:     *VARIABLES:                                                                      *A1 Function1 X1 Condition1                                                      *A2 Function2 X2 Condition2                                                      *.. ......... .. ..........                                                      *END                                                                             *                                                                                *<data> must be sorted by <aggr_variable> before using FILE AGGR.                *In the VARIABLES list, A1,A2,... are names of aggregated variables.             *Also the type of a variable can be given as Sum:8, Name:S16.                    *Possible functions are listed on the next page.                                 *X1,X2,... are names of variables in <data> to be aggregated.                    *Conditions are given in the form a1*a2+...+b1*b2*... (as in SELECT)             *Each of terms a1,a2, etc. is given as a condition of type IND or CASES.         *@C                                                                              *Functions in FILE AGGR:                                                         *N        Number of cases                                                        *         Example: Nbig   N  -  Big / Big=Popul,30000,500000                     *         `-' above means that N assumes no X variable.                          *SUM      Sum of observations                                                    *         Example: Popul:8  SUM  Popul                                           *MEAN     Arithmetic mean of observations                                        *STDDEV   Standard deviation                                                     *MIN      Minimum value                                                          *MAX      Maximum value                                                          *#VALUES  # of different values (<data> must be sorted also with respect        C*                                 to the X variable.)                           C*FIRST    Value of the first observation within the aggregate                    *         Typically, the name of the aggregate is copied by FIRST.               *         Example: Province FIRST Province                                       *LAST     Value of the last observation within the aggregate                     *NMISS    Number of missing observations                                         *SUMS     Sum of observations. If any are missing, the result is missing.        *MISSING  Just a new variable with missing values is created.                   C*                                   (To be continued on the next page)           *@C                                                                              *Functions in FILE AGGR (Continued):                                             *MODE          Mode of the observations                                         C*MEDIAN        Median of the observations                                        *FRACTILE(p)   p-fractile of the observations (0<=p<=1)                          *ORDER(k)      Observation Xk in the ordered sample X1<=X2<=...<=Xn              *              If k<0, observation X(n+k-1)                                      *              Example: ORDER(-1) is same as MAX.                                *ORDERN(k,V)   Value of variable V for the kth observation                       *              Example: Maxcomm ORDERN(-1,Commune) Popul                         *TMEAN(k)      Trimmed mean when k largest and least cases are omitted           *TPMEAN(p)     Trimmed mean on rejection probability level p (0<p<0.5)           *CORR(V)       Correlation of the X and the V variable                           *SLOPE(V)      Slope a in the regression model X=a*V+b+eps                       *INTERCEPT(V)  Intercept constant b in the above regression model.               *              In the 3 last functions V can be replaced by ORDER i.e.           *              order 1,2,...,n of observation within the aggregate.              *An application of FILE AGGR is presented by the sucro                           */AGGRDEMO                                                                       >EDQ-AGGRDEMO /                   Activate AGGRDEMO BY clicking |EXAMPLE|       C*  A = Using several aggregation variables                                      C*  D = More information on data management                                       %A=SAVESORT D=FILE?                                                              *@SELECT                                                                         *                                                                                *SAVESORT?                                                                       @FILE AGGR <data> BY <aggr_variable> TO <new_data_file>                          *allows only one <aggr_variable>.                                                *In certain applications a combination of several variables is needed            *for this purpose. Although such a combination can be created by                 *concatenating string variables (see VARSTR?), a more direct method              *is to use a specification                                                       *KEY_SAVED=<string_variable>                                                     *in the FILE SORT operation which normally precedes FILE AGGR since              *the data must be sorted by <aggr_variable>.                                     *KEY_SAVED in FILE SORT creates a <string_variable> if needed                    *in the <new_data_file> and saves the combined sort keys in it.                  *All components of the sort key must in this case be string variables.           *If not, it is easy to make string variables from numeric ones                   *(by VAR XS:S3=X TO <data>, for example).                                        *                                                                                *The example on the next page shows how this works with data file                *FINLAND.                                                                        *@C                                                                              *KEY_SAVED=AIS / Sort keys to be saved as variable AIS                           *FILE SORT FINLAND BY Agri,Industry,Service TO FIN2                              *                                                                                *FILE AGGR FIN2 BY AIS TO FIN_AGGR                                               *VARIABLES:                                                                      *AIS:S3 FIRST AIS                                                                *N:2    N     -                                                                  *Mean:4 MEAN  Tax                                                                *END                                                                             *................................................................................*FILE LOAD FIN_AGGR / IND=ORDER,1,5          5 first cases loaded                *DATA FIN_AGGR*                                                                  * AIS      N        Mean                                                         * 018      2      15.000                                                         * 027      5      15.700                                                         * 035      5      16.200                                                         * 036     10      16.325                                                         * 044      7      15.657                                                         *                                                                                *  A = More information on FILE AGGR                                             *  D = More information on data managementhadows                                                                          P       77777777777777777777                                                     END                                                                              