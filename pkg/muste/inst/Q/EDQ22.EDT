SURVO 98 edit field:    81       150       20 (32 bit version)
001|*SAVE EDQ22
002|*LOAD EDQ
004|*TABLE?
005|@TAB <data>,L
006|*makes cross-tabulations of <data> according to selected variables and
007|*saves the results in the output file (see OUTPUT) and from line L
008|*onwards in the current edit field, if L is given.
009|*Also means and standard deviations of a cell variable can be computed
010|*(see CELL specification below).
011|*The table can also be saved as a Survo data file (see TABFILE?).               C
013|*The IND and CASES specifications may be used to restrict the set of
014|*observations.
016|*Tables produced by TAB have a header and letters as line labels.
017|*The header and the labels are omitted by giving a specification LABELS=0 .
018|*@C
019|*The variables controlling classification can be numeric or string
020|*variables and they are to be listed by the specification
021|*VARIABLES=<column var>,<row var 1>,<row var 2>,...,<row var n>
022|*or
023|*VARIABLES=<column var>:<row var 1>,<row var 2>,...,<row var n>
025|*The first alternative of the VARIABLES specification implies computing
026|Sof one n-dimensional table.
S  |    44444444444444444
027|*The second one (with a colon ':' after <column var>) implies computing
028|Sof n two-dimensional tables with a common <column var>.
S  |    4 444444444444444
029|*There is still a more general alternative
030|*VARIABLES=<cvar 1>:<cvar 2>:...:<cvar m>:<rvar 1>,<rvar 2>,...
031|*which allows m nested column variables for each row variable.
032|*@C
033|*The classification of a numeric variable has to be given in the form
034|*<name of var>=L1,U1,U2,U3,...
035|*where L1=lower limit of the 1st class
036|*      U1=upper limit of the 1st class
037|*      U2=upper limit of the 2nd class etc.
038|*For example, Age=0,6,12,21 specifies age groups 0-6,7-12 and 13-21.
039|*Any class can be given a name in parentheses after the upper limit.
040|*For example, Color=1,1(white),2(red),3(blue).
042|*If the class widths are equal, classification may also be given in the
043|*form <name of var>=<up.limit_of_1.st_class>(<class_width>)<last_class>
044|*For example, Age=10(5)25 is same as Age=5,10,15,20,25. In this
045|*abbreviated notation no class names can be given.
047|*By default, cases with missing values in classifiers are omitted.
048|*However, for numeric classifiers a special class MISSING can be
049|*given as the last class. Example; Age=5,10,15,20,25,MISSING
050|*@C
051|*The classification of a string variable is described by examples:
053|*1) Assume that 'Weekday' is a string variable with values 'Su','Mo' etc.
054|*   A classification for 'Weekday' could be
055|*   Weekday=/Mo/Tu/We/Th/Fr(Workdays),/Sa/Su(Weekend)
056|*   thus forming 2 classes Workdays=(Mo,Tu,We,Th,Fr) and Weekend=(Sa,Su).
058|*2) Assume that 'Letter' is a string variable with values 'A','B','C' etc.
059|*   To classify letters to wowels and consonants the following
060|*   specification is valid:
061|*   Letter=/A/E/I/O/U(wowel),/-(consonant)
062|*   where /- denotes all the remaining alternatives.
063|*@C
064|*The printout of the (frequency) table may be include column and row
065|*sums, too. In addition to frequencies various tables of percentages
066|*can obtained. These options are selected by a RESULTS specification
067|*of the form
068|*RESULTS=CSUMS,RSUMS,C%,R%,T%
069|*with following consequences:
070|*CSUMS   sums of columns
071|*RSUMS   sums of rows
072|*C%      table of percentages in columns
073|*R%      table of percentages in rows
074|*T%      table of percentages from the grand total
075|*Any of the key words in RESULTS may be omitted.
076|*@C
077|*An example of a complete TAB operation for a 3-dimensional contingency
078|*table with column and row sums:
079|*TAB COMMUNES,27
080|*VARIABLES=Industry,Province,People  RESULTS=CSUMS,RSUMS
081|*Industry=0,2,5,9   (proportion of people working in industry 0-9)
082|*Province=/UUS/KYM,/TUR/AHV,/-  (3 classes)
083|*People=0,5000(small),20000(medium),500000(large)
084|*@C
086|*Tables of means, standard deviations and sums:
087|*To compute means and standard deviations for a selected variable,
088|*a CELL specification may be included. It has the form
089|*CELL=<cell variable>,<format for the results, ###.# for example>
091|*Sums of the cell variable are computed (instead of means and standard
092|*deviations) by giving the CELL specification in the form
093|*CELL=<cell variable>,<format>,<FSUM or SUM>
094|*For FSUM, both frequencies and sums are printed. For SUM, sums only are
095|*printed.
097|*  T = More information on TAB operations
098|*  S = General information on statistical operations
099|%T=TAB S=STATIS?
100|*@SELECT
102|*TAB?
103|*TAB operations for multiway tables:
105|*  1 = Computing frequency tables and tables of means, std.devs and sums (TAB)
106|*  2 = Analysis of variance (TABFIT)
107|*  3 = Management and editing of multiway tables
108|*  4 = Fitting log-linear models (TABFIT)
109|*  5 = Testing 2-way frequency tables by simulation (TABTEST)
110|*  M = MTAB operation (by M.Korhonen)
111|*  T = TAB key
112|*  P = Producing several tables at the same time (/TABULATE by KV)
113|*  B = Creating Burt's contingency tables (BURT by KV)
115|*  S = More information on statistical operations
117|%1=TABLE 2=ANOVA? 3=TABT? 4=TABFIT? 5=TABTEST?
118|%M=MTAB? T=TABKEY? S=STATIS? P=/TABULAT? B=BURT?
119|*@SELECT
121|*TABFILE?
122|*When a multiway table with VARIABLES list without any ':'s is created
123|*by a TAB command, the table is also saved as a new Survo data file
124|*by giving a specification FILE=<name_of_new_data_file>.
125|*Selected lines (typically the current TAB definition lines) are saved
126|*as comments to the new data file by a specification COMMENTS=L1,L2.
128|*Example:
129|S11 *TAB FINLAND / FILE=TAB_FIN1 COMMENTS=11,17
S  |                   1111111111111111111111111111
130|*12 *VARIABLES=Province,Popul,Area CELL=Brthrate
131|*13 *Province=/UUS/TUR/AHV/KYM(South),/HŽM/MIK/KUO/KES/VAA/KAR(Middle),&
132|*14 *         /-(North)
133|*15 *Popul=0,5000,20000,500000
134|*16 *Brthrate=0,10,15,30
135|*17 *Area=0,1000,20000
136|*18 *
138|*This option is available in versions 3.33+.
140|*  T = More information on TAB operations
141|%T=TABLE
142|*@SELECT
