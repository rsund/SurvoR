SURVO84ED 81 600    81 S20                                                       *SAVE EDQMC1                                                                     *LOAD EDQ                                                                        *                                                                                *COMB?                                                                           @COMB <name>,L                                                                   *with a specification <name>=<type>,<list_of_parameters>                         *lists various combinatorial entities like                                       *permutations, subgroups, partitions, distributions, etc.                        *in the edit field from line L onwards.                                          *COMB <name> TO <text_file>                                                      *does the same job but saves the results in a text file.                         *                                                                                *Example:                                                                        *COMB S1,CUR+1 / S1=SUBSETS,10,5 SYMBOLS=A,B,C,D,E,F,G,H,I,J                     *Subsets of size 5 of 10 elements: N[S1]=252                                     *A B C D E                                                                       *A B C D F                                                                       *A B C D G                                                                       *A B C D H                                                                       *. . . . .                                                                       *E G H I J                                                                       *F G H I J                                                                       *                                                                                *   C = Various forms of COMB                                                    *   M = More on mathematical operations                                          %C=COMB2 M=MATH?                                                                 *                                                                                *COMB2?                                                                          @COMB <name>,L                                                                   *                                                                                *    1 = General Information                                                     *    2 = Permutations                                                            *    3 = Subsets                                                                 *    4 = Partitions                                                              *    5 = Distributions                                                           *    6 = Integers in given base                                                  *    7 = Lattice points                                                          *    8 = Probabilities of multinomial distribution                               *    R = RESULTS specification                                                   *    S = SYMBOLS specification                                                   *    M = Mathematical operations                                                 *                                                                                %1=COMB 2=PERM 3=SUBSET 4=PART 5=DISTR 6=INTEGER 7=LATTICE 8=MULTIN              %R=RESULTS S=SYMBOL M=MATH?                                                      *                                                                                *AA?                                                                             *                                                                                *    C = Other forms of COMB                                                     %C=COMB2                                                                         *                                                                                *PERM?                                                                           *COMB P,L / P=PERMUTATIONS,<n>                                                   *lists all permutations of <n> given elements (default 1,2,3,...)                *in lexicographic order.                                                         *Example:                                                                        *COMB PERM,CUR+1 / PERM=PERMUTATIONS,3                                           *Permutations of 3 elements: N[PERM]=6                                           *1 2 3                                                                           *1 3 2                                                                           *2 1 3                                                                           *2 3 1                                                                           *3 1 2                                                                           *3 2 1                                                                           *@C                                                                              *COMB P,L / P=PERMUTATIONS,<n>,<m>                                               *lists <m>-permutations of <n> given elements (default 1,2,3,...)                *in lexicographic order.                                                         *Example:                                                                        *COMB PERM,CUR+1 / PERM=PERMUTATIONS,4,2  ELEMENTS=A,B,C,D                       *2-permutations of 4 elements: N[PERM]=12                                        *A B                                                                             *A C                                                                             *A D                                                                             *B A                                                                             *B C                                                                             *B D                                                                             *C A                                                                             *C B                                                                             *C D                                                                             *D A                                                                             *D B                                                                             *D C                                                                             *@C                                                                              *ELEMENTS=<list_of_elements_with_repetitions>                                    *COMB P,L / P=PERMUTATIONS,<n>,<m>                                               *lists <m>-permutations of <n>                                                   *in lexicographic order from a list given by ELEMENTS.                           *Example:                                                                        *COMB PERM,CUR+1 / PERM=PERMUTATIONS,5,3  ELEMENTS=A,A,A,B,B                     *3-permutations of 5 elements (with repetitions): N[PERM]=7                      *A A A                                                                           *A A B                                                                           *A B A                                                                           *A B B                                                                           *B A A                                                                           *B A B                                                                           *B B A                                                                           *@C                                                                              *@G PERM2                                                                        *................................................................................*PERM2?                                                                          *Permutations with restricted positions:                                         *COMB PERM,CUR+1 / PERM=R_PERMUTATIONS,<n> RESTRICTIONS=<matrix_file>            *lists permutations of <n> elements with restricted positions                    *given by non-zero elements in <n>*<n> <matrix_file>.                            *                                                                                *Example:                                                                        *MATRIX A5 ///                                                                   *1 0 0 0 1     / `1' cannot be in positions 1,5.                                 *0 1 1 0 0     / `2' cannot be in positions 2,3.                                 *0 0 1 1 1     / `3' cannot be in positions 3,4,5.                               *1 1 0 0 0     / `4' cannot be in positions 1,2.                                 *1 0 1 0 1     / `5' cannot be in positions 1,3,5.                               *                                                                                *MAT SAVE A5                                                                     *COMB PERM,CUR+1 / PERM=R_PERMUTATIONS,5 RESTRICTIONS=A5                         *Permutations of 5 elements with restrictions A5: N[PERM]=5                      *2 3 1 5 4                                                                       *3 1 4 5 2                                                                       *3 5 1 2 4                                                                       *3 5 1 4 2                                                                       *3 5 4 1 2                                                                       *@C                                                                              *R_PERMUTATIONS is much quicker than PERMUTATIONS in cases of                    *many restricted positions and somewhat slower in simple cases.                  *PERMUTATIONS generates all permutations and cancels non-allowed cases.          *R_PERMUTATIONS uses a recursive algorithm where restrictions are                *observed already when permutations are generated.                               *                                                                                *Example: 'i' not allowed in positions i-1,i,i+1 (i=1,..,n n+1=1)                *MATRIX A ///                                                                    *1 1 0 0 0 0 0 0 0 0 1                                                           *                                                                                *MAT SAVE A                                                                      *MAT C=DIAGVEC(A)   / *C~DIAGVEC(A) S11*11                                       */MATSHOW C,12                                                                   *                                                                                *COMB P,CUR+1 / P=R_PERMUTATIONS,11 RESTRICTIONS=C  RESULTS=0                    *Permutations of 11 elements with restrictions C: N[P]=1445100                   *                                                                                *is about 6 times faster than                                                    *COMB P,CUR+1 / P=PERMUTATIONS,11 RESTRICTIONS=C  RESULTS=0                      *@G AA                                                                           *................................................................................*SUBSET?                                                                         *COMB S,L / S=SUBSETS,<n>                                                        *lists all non-empty subgroups of <n> elements.                                  *COMB S2,L / S2=SUBSETS,<n>,<m>                                                  *lists subsets of <n> elements consisting of <m> elements.                       *Example:                                                                        *COMB SUB3,CUR+1 / SUB3=SUBSETS,5,3                                              *Subsets of size 3 of 5 elements: N[SUB3]=10                                     *1 2 3                                                                           *1 2 4                                                                           *1 2 5                                                                           *1 3 4                                                                           *1 3 5                                                                           *1 4 5                                                                           *2 3 4                                                                           *2 3 5                                                                           *2 4 5                                                                           *3 4 5                                                                           *@C                                                                              *COMB S2,L / S2=SUBSETS,<n>,<m> ELEMENTS=<list_of_elements>                      *lists all m-subsets of <n> elements given by ELEMENTS list with                 *possible repetitions.                                                           *Example:                                                                        *COMB SUB5R,CUR+1 / SUB5R=SUBSETS,8,5 ELEMENTS=a,a,a,b,b,c,c,c                   *5-subsets of 8 elements (with repetitions): N[SUB5R]=9                          *a a a b b                                                                       *a a a b c                                                                       *a a a c c                                                                       *a a b b c                                                                       *a a b c c                                                                       *a a c c c                                                                       *a b b c c                                                                       *a b c c c                                                                       *b b c c c                                                                       *@G AA                                                                           *                                                                                *PART?                                                                           *COMB PART,L / PART=PARTITIONS,<n>                                               *lists all partitions of interger <n>.                                           *COMB PART,L / PART=PARTITIONS,<n>,<m>                                           *lists partitions of <n> consisting of <m> parts.                                *................................................................................*In both forms of partitions the sizes of parts can be limited                   *by MIN and MAX specifications.                                                  *Example:                                                                        *COMB PART1,CUR+1 / PART1=PARTITIONS,12,4 MIN=2 MAX=4                            *Partitions 4 of 12: N[PART1]=3                                                  *2 2 4 4                                                                         *2 3 3 4                                                                         *3 3 3 3                                                                         *@C                                                                              *................................................................................*By the DISTINCT specification only partitions with distinct parts               *are accepted.                                                                   *Example:                                                                        *COMB PART1,CUR+1 / PART1=PARTITIONS,18,4 MIN=2 MAX=10 DISTINCT=1                *Partitions 4 of 18: N[PART1]=5                                                  *2 3 4 9                                                                         *2 3 5 8                                                                         *2 3 6 7                                                                         *2 4 5 7                                                                         *3 4 5 6                                                                         *@C                                                                              *................................................................................*COMB P,L / P=PARTITIONS,<n>                                                     *           PARTS=<ascending_list_of_positive_integers>                          *lists all partitions of <n> using only integers given by PARTS.                 *COMB P,L / PART=PARTITIONS,<n>,<m>                                              *           PARTS=<ascending_list_of_positive_integers>                          *lists partitions of <n> consisting of <m> parts using the PARTS integers.       *As a special case, PARTS=POWERS,k is the same as                                *PARTS=1,2^k,3^k,4^k,...                                                         *Examples:                                                                       *COMB P,CUR+1 / P=PARTITIONS,1729,2 PARTS=POWERS,3                               *Partitions 2 of 1729: N[P]=2                                                    *1 1728                                                                          *729 1000                                                                        *................................................................................*PARTS=1,5,10,20,50,100,500,1000 (metal and paper moneys in Finland)             *COMB P,CUR+1 / P=PARTITIONS,1000 RESULTS=0                                      *Partitions of 1000: N[P]=2720784                                                *................................................................................*@C                                                                              *COMB P,L / P=PARTITIONS,<n>,<m> DISTINCT=1 OFF=i1,i2,...                       C*makes partitions of size <m> for <n> with distinct elements and                 *excluding elements i1,i2,... listed by an OFF specification.                    *................................................................................*Example:                                                                        *COMB P,CUR+1 / P=PARTITIONS,25,3 DISTINCT=1 OFF=2,4,6,8,10                      *Partitions 3 of 25: N[P]=10                                                     *1 3 21                                                                          *1 5 19                                                                          *1 7 17                                                                          *1 9 15                                                                          *1 11 13                                                                         *3 5 17                                                                          *3 7 15                                                                          *3 9 13                                                                          *5 7 13                                                                          *5 9 11                                                                          *................................................................................*@C                                                                              *COMB P,L / P=PARTITIONS,<n> GREATEST=<m>                                       C*lists partitions of <n> with <m> as the greatest part.                          *Example:                                                                        *COMB P,CUR+1 / P=PARTITIONS,10 GREATEST=3                                       *Partitions of 10: N[P]=8                                                        *1 3 3 3                                                                         *2 2 3 3                                                                         *1 1 2 3 3                                                                       *1 2 2 2 3                                                                       *1 1 1 1 3 3                                                                     *1 1 1 2 2 3                                                                     *1 1 1 1 1 2 3                                                                   *1 1 1 1 1 1 1 3                                                                 *                                                                                *The number of these partitions is the same as those obtained by                 *PARTITIONS,<n>,<m>                                                              *since there there is a bijective mapping between these two types of             *partitions proved simply by transposing the Ferrers graph.                      *................................................................................*@C                                                                              *COMB P,L / P=PARTITIONS,<n>,<m> MIN=<min> MAX=<max> MULTIN=1                    *both makes partitions of size <m> for <n> and - by assuming that each           *partition f1+f2+...+fm=n represents frequencies of an n-fold trial with         *m possible outcomes with equal probabilities 1/m - computes also the            *probability that the conditions <min> <= fi <= <max>, i=1,2,...,m               *are fulfilled. This probability is computed if MULTIN=1 is given.               *Example on the next page!                                                       *@C                                                                              *................................................................................*Example: What is the probability that in 600 tosses of an unbiased              *dice the frequencies of each of the numbers 1,2,3,4,5,6 fall in                 *the closed interval [90,110] ?                                                  *                                                                                *TIME COUNT START                                                                *COMB P,CUR+2 / P=PARTITIONS,600,6 MIN=90 MAX=110 MULTIN=1 RESULTS=0             *TIME COUNT END   0.220                                                          *Restricted partitions of 600: N[P]=5444 P=0.215947                              *Thus the probability is P=0.215947 .                                            *                                                                                *Checking that the sum of all multinomial probabilities is 1:                    *Please note that it takes "some time". This is computed on a 700 MHz PC.        *TIME COUNT START                                                                *COMB P,CUR+2 / P=PARTITIONS,600,6 MIN=0 MAX=600 MULTIN=1 RESULTS=0              *TIME COUNT END   1406.632                                                       *Restricted partitions of 600: N[P]=981355696 P=1                                *@G AA                                                                           *................................................................................*DISTR?                                                                          *COMB D,L / D=DISTRIBUTIONS,<n>,<m>                                              *lists distributions of <n> like elements into <m> different cells.              *Example:                                                                        *COMB DISTR,CUR+1 / DISTR=DISTRIBUTIONS,3,3                                      *Distributions of 3 into 3 cells: N[DISTR]=10                                    *0 0 3                                                                           *0 1 2                                                                           *0 2 1                                                                           *0 3 0                                                                           *1 0 2                                                                           *1 1 1                                                                           *1 2 0                                                                           *2 0 1                                                                           *2 1 0                                                                           *3 0 0                                                                           *@C                                                                              *COMB D,L / D=DISTRIBUTIONS,<n>,<m>  MIN=<value or list of values>               *                                    MAX=<value or list of values>               *lists distributions of <n> like elements into <m> different cells               *The cell frequencies must be between given MIN and MAX values.                  *Example:                                                                        *COMB D,CUR+1 / D=DISTRIBUTIONS,80,3 MIN=20,25,30 MAX=23,28,33                   *Distributions of 80 elements into 3 cells: N[D]=12                              *20 27 33                                                                        *20 28 32                                                                        *21 26 33                                                                        *21 27 32                                                                        *21 28 31                                                                        *22 25 33                                                                        *22 26 32                                                                        *22 27 31                                                                        *22 28 30                                                                        *23 25 32                                                                        *23 26 31                                                                        *23 27 30                                                                        *@G AA                                                                           *................................................................................*INTEGER?                                                                        *COMB N,L / N=INTEGERS,<positions>,<base>                                        *lists integers in given <base> (as sequences of digits)                         *up to given <positions>.                                                        *Specification MOVE=<c> adds integer <c> to each digit.                          *SUM=<integer> accepts only cases with sum of digits = <integer>.                *                                                                                *Example:                                                                        *COMB N2,CUR+1 / N2=INTEGERS,3,2                                                 *Integers of 3 digits in base 2: N[N2]=8                                         *0 0 0                                                                           *0 0 1                                                                           *0 1 0                                                                           *0 1 1                                                                           *1 0 0                                                                           *1 0 1                                                                           *1 1 0                                                                           *1 1 1                                                                           *@G AA                                                                           *................................................................................*LATTICE?                                                                        *COMB L,CUR+1 / L=LATTICE,n MIN=MIN1,MIN2,...,MINn MAX=MAX1,MAX2,...,MAXn        *lists all points in an n-dimensional rectangular lattice where                  *the integer-valued coordinates Xi (i=1,2,...,n) are limited by MINi<=Xi<=MAXi.  *Example:                                                                        *COMB L,CUR+1 / L=LATTICE,3 MIN=0,1,2 MAX=1,2,4                                  *Lattice points in 3 dimensions: N[L]=12                                         *0 1 2                                                                           *0 1 3                                                                           *0 1 4                                                                           *0 2 2                                                                           *0 2 3                                                                           *0 2 4                                                                           *1 1 2                                                                           *1 1 3                                                                           *1 1 4                                                                           *1 2 2                                                                           *1 2 3                                                                           *1 2 4                                                                           *@G AA                                                                           *................................................................................*RESULTS?                                                                        *In all forms of COMB only the number of combinations is displayed when          *RESULTS=0 is given.                                                             *Example:                                                                        *COMB P1,CUR+1 / P1=PARTITIONS,70,14  RESULTS=0                                  *Partitions 14 of 70: N[P1]=290071                                               *................................................................................*COMB P2,CUR+1 / P2=PARTITIONS,70 MAX=14 RESULTS=0                               *Partitions of 70: N[P2]=1614987                                                 *................................................................................*COMB P3,CUR+1 / P3=PARTITIONS,70 MAX=13 RESULTS=0                               *Partitions of 70: N[P3]=1324916                                                 *Note: difference N[P2]-N[P3]=290071  = N(P1)  (Why?)                            *................................................................................*By giving RESULTS=1 the list will be displayed but the first line               *(header line containing N[P]) not.                                              *@G AA                                                                           *................................................................................*SYMBOL?                                                                         *In types PERMUTATIONS and SUBSETS the default elements are 1,2,3,...            *These elements can be replaced by other symbols by a specification              *SYMBOLS=<list_of_symbols>.                                                      *Example:                                                                        *COMB P,CUR+1 / P=SUBSETS,5,3 SYMBOLS=a,b,c,d,e                                  *Subsets of size 3 of 5 elements: N[P]=10                                        *a b c                                                                           *a b d                                                                           *a b e                                                                           *a c d                                                                           *a c e                                                                           *a d e                                                                           *b c d                                                                           *b c e                                                                           *b d e                                                                           *c d e                                                                           *@G AA                                                                           *                                                                                *MULTIN?                                                                         *COMB operation can be used also for computing probabilities related to          *a given multinomial distribution as shown by the following examples.            *@C                                                                              *........................................................................        *Example 1:                                                                      *Assume that in a random experiment there are 3 alternatives with                *probabilities PROB=1/2,1/4,1/4 (ratios of integers are permitted)               *and we want to compute the probability that 12 observations are distributed     *among these 3 alternatives so that frequencies are within limits given          *by min.values MIN=3,4,1 and max.values MAX=5,5,5                                *                                                                                *The permitted combinations are computed by                                      *COMB D,CUR+1 / D=DISTRIBUTIONS,12,3                                             *Distributions of 12 elements into 3 cells: N[D]=6 P=0.170511245727539           *3 4 5 1.321792602539068e-002                        (sum of prob.s)             *3 5 4 1.321792602539068e-002                                                    *4 4 4 3.304481506347660e-002                                                    *4 5 3 2.643585205078131e-002                                                    *5 4 3 5.287170410156262e-002                                                    *5 5 2 3.172302246093759e-002                                                    *                                                                                *f(n):=fact(n)  Checking the first case:                                         *f(12)/(f(3)*f(4)*f(5))*(1/2)^3*(1/4)^4*(1/4)^5=0.01321792602539                 *................................................................................*@C                                                                              *................................................................................*Example 2:                                                                      *If there is no need to list various alternatives, it is much faster             *to compute probabilities as follows:                                            *MIN=0  MAX=10000  (Thus all possible combinations)                              *TIME COUNT START                                                                *COMB M,CUR+2 / M=MULTIN_PROB,10000,6                                            *TIME COUNT END   250.410 (on 700 MHz Pentium)                                   *Distributions of 10000 elements into 6 cells: P[M]=0.999999999606738            *................................................................................*Similarly:                                                                      *MIN=900 MAX=1100                                                                *TIME COUNT START                                                                *COMB M,CUR+2 / M=MULTIN_PROB,6000,6                                             *TIME COUNT END   0.450                                                          *Distributions of 6000 elements into 6 cells: P[M]=0.997014290654646             *................................................................................*Computation method on the next page!                                            *@C                                                                              *Assume n trials with m equiprobable outcomes.                                   *Let P(n,m,min,max) be the probability of getting all frequencies                *within the interval [min,max].                                                  *Then P(n,m)=P(n,m,min,max) is obtained from the recurrence                      *         max                                                                    *P(n,m) = SUM   C(n,i)*(1/m)^i(1-1/m)^(n-i)*P(n-i,m-1)                           *         i=min                                                                  *                                                                                *with initial conditions  P(n,m) = 0, if m*min>n or m*max<n,                     *                         P(n,1) = 1.                                            *                                                                                *If probabilities of m alternatives p1,p2,...,pm are not the same,               *         max                                                                    *P(n,k) = SUM   C(n,i)*qi^i(1-qi)^(n-i)*P(n-i,k-1)                               *         i=min                                                                  *where qi=pi/(p1+p2+...+pk).                                                     *Example of this more general case on the next page!                             *@C                                                                              *................................................................................*Example 3:                                                                      *PROB=1/5,1/5,1/5,0.21,0.19                                                      *MIN=900 MAX=1100                                                                *TIME COUNT START                                                                *COMB M,CUR+2 / M=MULTIN_PROB,5000,5                                             *TIME COUNT END   0.230                                                          *Distributions of 5000 elements into 5 cells: P[M]=0.928764087453283             *................................................................................*MIN=900,900,900,900,900 MAX=1100,1100,1100,1100,1100                            *PROB=1/5,1/5,1/5,0.21,0.19                                                      *TIME COUNT START                                                                *COMB D,CUR+2 / D=DISTRIBUTIONS,5000,5 RESULTS=0                                 *TIME COUNT END   789.195                                                        *Distributions of 5000 elements into 5 cells: P=0.928764087453838                *                                             N[D]=977654751                     *Thus the recursive algorithm is almost 25000 times faster in this case!         *................................................................................*@C                                                                              *................................................................................*Example 4:                                                                      *What is the probability that in 600 tosses of an unbiased dice all              *frequencies of numbers 1,2,3,4,5,6 remain within the interval [90,110]?         *MIN=90,90,90,90,90,90                                                           *MAX=110,110,110,110,110,110                                                     *PROB=1/6,1/6,1/6,1/6,1/6,1/6                                                    *COMB D,CUR+1 / D=DISTRIBUTIONS,600,6 RESULTS=0                                  *Distributions of 600 elements into 6 cells: N[D]=2248575 P=0.215946634850144    *........................................................................        *When the distribution is discrete uniform, it is simpler and faster             *to compute the probability (by using a MULTIN specification) by:                *COMB P,CUR+1 / P=PARTITIONS,600,6 MIN=90 MAX=110 MULTIN=2 RESULTS=0             *Restricted partitions of 600: N[P]=5444 P=0.215946634850137 NM=2248575          *NM=N[D] (due to MULTIN=2) is also computed. See also Partitions!                *........................................................................        *The fastest solution is:                                                        *COMB M,CUR+1 / M=MULTIN_PROB,600,6 MIN=90 MAX=110                               *Distributions of 600 elements into 6 cells: P[M]=0.215946634850135              *................................................................................*@C                                                                              *................................................................................*Example 5: Varying limits and probabilities                                     *MIN=450,180,100,50,44                                                           *MAX=560,270,170,80,88                                                           *PROB=1/2,1/4,1/8,1/16,1/16                                                      *TIME COUNT START                                                                *COMB M,CUR+2 / M=MULTIN_PROB,1024,5                                             *TIME COUNT END   0.440   (366 MHz)                                              *Distributions of 1024 elements into 5 cells: P[M]=0.808004563373524             *................................................................................*MIN=450,180,100,50,44                                                           *MAX=560,270,170,80,88                                                           *PROB=1/2,1/4,1/8,1/16,1/16                                                      *TIME COUNT START                                                                *COMB M,CUR+2 / M=DISTRIBUTIONS,1024,5 RESULTS=0                                 *TIME COUNT END   11.810                                                         *Distributions of 1024 elements into 5 cells: N[M]=6784690 P=0.808004563373562   *@G AA                                                                           *................................................................................*EGYPT?                                                                          *EGYPT m/n,k                                                                     *represents fraction m/n of positive integers as an Egyptian fraction            *with k terms i.e. in the form                                                   *m/n=1/n(1)+1/n(2)+...+1/n(k)                                                    *where n(1)<n(2)<...<n(k) and n(k) is as small as possible.                      *Examples:                                                                       *EGYPT 1/2,5 / 1/2=1/6+1/9+1/10+1/15+1/18                                        *EGYPT 1/1,6 / 1/1=1/3+1/4+1/6+1/10+1/12+1/15                                    *EGYPT 5/121,3 / 5/121=1/33+1/121+1/363                                          *EGYPT 2/11,3 / 2/11=1/10+1/15+1/66                                              *                                                                                *A brute-force algorithm of Stewart (improved by SM) is used.                    *@C                                                                              *All solutions are saved in a text file given by a SAVE specification.           *Possible n(i)-values can be limited by NMIN and NMAX specifications.            *................                                                                *Example: SAVE=EG.TXT NMAX=66                                                    *EGYPT 2/11,3 / 2/11=1/10+1/15+1/66                                              *LOADP EG.TXT                                                                    *Denominators of Egyptian fractions for 2/11:                                    *7 42 66                                                                         *8 24 66                                                                         *9 18 66                                                                         *10 15 66                                                                        *Thus there are 4 different 'minimal' expansions of 2/11.                        *The primary solution of EGYPT is the one having smallest n(k-1) etc.            *In most cases the 'minimal' expansion is unique