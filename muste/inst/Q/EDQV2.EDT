SURVO84ED 81 300    81 S20                                                       *SAVE EDQV2                                                                      *LOAD EDQ                                                                        *                                                                                *LAG?                                                                            *  1 = lags and leads in transformations of variables                            *  2 = LAG specification in PLOT operation                                       %1=LAG1 2=LAG2?                                                                  *@SELECT                                                                         *                                                                                *LAG1?                                                                           *Variables with lags and leads are available in all types of the VAR oper-       *ation using the following notation:                                             *         # of observation    value of variable SERIES                           *             current - 2      SERIES[-2]                                        *             current - 1      SERIES[-1]                                        *             current          SERIES         (=SERIES[0])                       *             current + 1      SERIES[+1]                                        *             current + 2      SERIES[+2]                                        *Examples:                                                                       *VAR MEAN3,DIFF TO TEST2                                                         *MEAN3=(SER1[-1]+SER1+SER1[+1])/3                                                *DIFF=SER1-SER1[-1]                                                              *END                                                                             *                                                                                *VAR Fibo,Ratio TO GOLDEN                                                        *Fibo=if(ORDER<3)then(1)else(Fibo[-1]+Fibo[-2])                                  *Ratio=if(ORDER<2)then(MISSING)else(Fibo/Fibo[-1])                               *END                                                                             *                                                                                *  V = More information on VAR operation                                         %V=VAR?                                                                          *@SELECT                                                                         *                                                                                *STRING?                                                                         *  1 = String variables in data files                                            *  2 = Transformation of string variables                                        %1=FCREATE? 2=VARSTR                                                             *@SELECT                                                                         *                                                                                *VARSTR?                                                                         *If a string variable holds numerical information, it can be treated             *like numerical variables in numerical transformations (by the VAR operation.)   *                                                                                *To modify true textual information in string variables, a VAR operation         *of the form                                                                     *VAR str(U,p,len)=str(V1,p1,len1)&str(V2,p2,len2)&... TO <data>                  *where U,V1,V2,... are string variables, is available.                           *Above, str(U,p,len) means a partial string of U starting from position 'p'      *and having length of 'len' bytes. Alternative notations are                     *str(U) (the whole string field), str(U,p) (the whole field from 'p' onwards).   *'&' means concatenation (chaining) of the strings.                              *On the right hand side also constant strings of the form "ABC" can appear.      *(Examples are given on the next page.)                                          *                                                                                *pos(S,p,string) is a useful auxiliary function giving the position of 'string'  *in the string variable S after the 'p'th position.                              *pos(S,string) is the same as pos(S,1,string) .                                  *For example, if S is "ABC:123:X", then pos(S,:)=4, pos(S,5,:)=8, pos(S,Z)=0 .   *@C                                                                              *Conditional VAR statements of the form                                          *VAR Var1=if(str(...)=str(...))then(value1)else(value2) TO DATA1                 *are allowed. Also <,>,<> etc. are possible as relational symbols.               *Also string fields with lags and leads are permitted.                          C*For example,                                                                   C*VAR S=if(str(X[-1],1,2)=str(X,1,2))then(1)else(0) TO DATA1                     C*gives S=1 when the 2 first characters of X are same in the previous            C*record and S=0 otherwise.                                                      C*                                                                                *Trailing blanks in string concatenation:                                       C*In string expression of the form str(A)&str(B)&str(C) trailing blanks          C*are included.                                                                  C*To remove such blanks, `connector' `|' is used in place of `&'.                C*Thus if str(A)="AA  ", str(B)="BBB   ", str(C)="anything",                     C*str(A)&str(B)&str(C)="AA  BBB   anything" but                                  C*str(A)|str(B)|sp&str(C)="AABBB anything" (sp denotes one blank).               C*@C                                                                               Examples: (See, what are the effects of the VAR operations below.)              *                                                                                *DATA TEST,A,B,N,M                                                               M AAAAAA  AAAAAAAA  AAAA  AAAAAAAA    A   A    AA                                N Code1   Code2    Year1  Code3     len   D  LagY                                A 281037  AB/1967   1937  1967:AB     7   0                                      * 170667  A/1978    1967  1978:A      6   0    37                                * 120659  ACD/1977  1959  1977:ACD    8   0    67                                B 190939  D/1989    1939  1989:D      6   1    59                                *                                              39                                *VAR str(Year1)="19"&str(Code1,5) TO TEST                                        *VAR str(Code3)=str(Code2,pos1+1,4)&":"&str(Code2,1,pos1-1) TO TEST              *                 pos1=pos(Code2,/)                                              *VAR len=pos(Code2,sp)-1 TO TEST                                                 *                  sp (or space) is the notation for the 'space' character.      *                  comma is the notation for ',' .                               *VAR D=if(str(Code2,1,1)="D")then(1)else(0) TO TEST / conditional statement      *VAR str(LagY[+1])=str(Year1,3,2) TO TEST / lags and leads allowed               *@C                                                                               VAR str(var2)=split(var1,<len>,<char>)                                         C splits a string in var1 so that spaces between 'words' are replaced              by <char> so that the length of each substring is at most <len>                  except for 'words' longer that <len> bytes.                                      Example: VARSTR(str2)=split(var1,8,|) converts                                   var1="This is a long string" into form                                           var2="This is|a long|string|".                                                                                                                                      V = More information on VAR operation                                         %V=VAR?                                                                          *                                                                                *VARSTAT?                                                                        @VARSTAT <data>,Y,<rule>                                                         *computes a derived variable Y from active variables (say X1,X2,...,Xm)          *for active observations in <data> according to a given <rule>.                  *                                                                                *Rules available are:                                                            *VARSTAT <data>,Y,SUM             Y=X1+X2+...                                    *VARSTAT <data>,Y,SUM,p           Y=X1^p+X2^p+...                                *VARSTAT <data>,Y,MEAN            Y=(X1+X2+...)/m                                *VARSTAT <data>,Y,MEAN,p          Y=((X1^p+X2^p+...)/m)^(1/p)                    *VARSTAT <data>,Y,MEDIAN          Y=median(X1,X2,...)                            *VARSTAT <data>,Y,STDDEV          Y=stddev(X1,X2,...)                            *VARSTAT <data>,Y,MAX             Y=max(X1,X2,...)                               *VARSTAT <data>,Y,MIN             Y=min(X1,X2,...)                               *VARSTAT <data>,Y,RANGE           Y=max-min                                      *VARSTAT <data>,Y,#MISS           Y= # of missing values                         *VARSTAT <data>,Y,#N              Y= # of non-missing values                     *VARSTAT <data>,Y,#VAL,A          Y= # of values X=A  (A is a constant)          *VARSTAT <data>,Y,#VAL,A,B        Y= # of values A<=X<=B (A and B constants)     *                                                                                *Other forms of VARSTAT are described on next pages.                             *@C                                                                              *To compute several Y variables (say Y1,Y2,...) with different rules for         *the same X1,X2,..., another form of VARSTAT with a VARSTAT specification        *is                                                                              @VARSTAT <data> / VARSTAT=Y1,Y2,...                                              *                 Y1=<rule1> Y2=<rule2>, ...                                     *For example, the mean and the standard deviation in each active observation     *are computed as variables M1 and S1 by                                          *VARSTAT <data> / VARSTAT=M1,S1  M1=MEAN S1=STDDEV                               *@C                                                                              *VARSTAT <data>,*,<rule>                                                         *makes a collective transformation for all active variables. The original        *values are overwritten in this form of VARSTAT.                                 *                                                                                *Alternative rules:                                                              *VARSTAT <data>,*,DIVSUM,100      Xi=100*Xi/SUM    i=1,2,...,m                   *VARSTAT <data>,*,DIVMAX,100      Xi=100*Xi/MAX                                  *VARSTAT <data>,*,NORM,p,C        Normalize: X1^p+X2^p+..=C                      *VARSTAT <data>,*,CENTER          Xi=Xi-mean                                     *VARSTAT <data>,*,STANDARD        Xi=(Xi-mean)/stddev                            *VARSTAT <data>,*,DIV,<var>       Xi=Xi/<var>                                    *VARSTAT <data>,*,MLT,<var>       Xi=Xi*<var>                                    *VARSTAT <data>,*,ADD,<var>       Xi=Xi+<var>                                    *VARSTAT <data>,*,SUB,<var>       Xi=Xi-<var>                                    *VARSTAT <data>,*,SORT            Sort in ascending order                       C*@C                                                                               Example:                                                                        *VARSTAT TEST,*,DIVSUM    / Activate these two VARSTAT lines!                    *VARSTAT TEST,Sum,SUM                                                            *VARS=X1,X2,X3                                                                   *DATA TEST,A,B,N,M                                                               N  X1     X2     X3        Sum                                                   M  AA.AA  AA.AA  AA.AA   111.111                                                 A   6      -      1                                                              *   6      3      5                                                              *   -      1      7                                                              *   8      1      0                                                              B   6      2      2                                                              *                                                                                                                                                                   A = Some special forms of VARSTAT                                             C  V = More information on transformations                                        *                                                                                %A=VARSTAT2 V=VAR?                                                               *@SELECT                                                                         *                                                                                *VARSTAT2?                                                                       *Special forms of VARSTAT                                                       C*                                                                                *VARSTAT <data>,Y,FIRST,L / L=val1,val2,...                                      *finds the first occurrence of values listed by L in each record                 *and saves the position (# of variable) wherefrom the sought sequence            *starts as variable Y. For example, if L=0,1,0,1 and we have a                   *record 1 1 0 1 1 0 1 0 1 1 0 0 1 0 1 1 1 ..., Y will be 6.                      *                                                                                *VARSTAT <data>,Y,LAST,L / L=val1,val2,...                                       *respectively finds the last occurrence of a list of values. In the              *example above Y would be 12.                                                    *                                                                                *Both in FIRST and LAST missing values in the list are notated by `-'s.          *If the sequence of values given by L is not found at all in a certain           *record, the code of a missing value is saved in Y.                              *@C                                                                              *Special forms of VARSTAT (continuation)                                        C*                                                                                *VARSTAT <data>,Y,#SEQ,L / L=val1,val2,...                                       *finds the number of sequences of values listed by L in each record.             *For example, if L=1,0,1 and we have a record                                    *1 1 0 1 1 0 1 0 1 1 0 0 1 0 1 0 1 , Y will be 3.                                *  ^     ^               ^           <- starting positions of 1,0,1              *If specification OVERLAP=1 is given, also overlapping sequences are counted.    *In this case in the example                                                     *1 1 0 1 1 0 1 0 1 1 0 0 1 0 1 0 1   Y will be 5.                                *  ^     ^   ^           ^   ^                                                   *                                                                                *VARSTAT <data>,Y,#RUN,L / L=val1,val2,...                                       *finds the number of runs of values listed by L in each record.                  *For example, if L=1,2 and we have a record                                      *1 1 1 0 2 1 2 0 0 2 2 0 1 , Y will be 4                                         *^       ^         ^     ^   <- starting positions of the runs                   *                                                                                *@C                                                                              *Special forms of VARSTAT (continuation)                                        C*                                                                                *VARSTAT <data>,Y,CYCLEN                                                         *computes the length of the shortest cycle of values which generates             *the current record of active variables.                                         *                                                                                 Example:                                                                        *DATA C12,a,a+4,n,m                                                              m 1 1 1 1 1 1 1 1 1 1 1 1 11                                                     n A B C D E F G H I J K L  X                                                     a 1 2 5 1 2 5 1 2 5 1 2 5  3                                                     * 4 7 4 7 4 7 4 7 4 7 4 7  2                                                     * 9 9 9 9 9 9 9 9 9 9 9 9  1                                                     * 1 2 3 4 1 2 1 2 3 4 1 2  6                                                     * 1 2 1 2 1 2 1 2 1 2 1 1 12                                                     *                                                                                *MASK=AAAAAAAAAAAA                                                               *VARSTAT C12,X,CYCLEN / gives cycle lengths of A,B,...,K,L  as X                                                                                                  *@C                                                                              *Special forms of VARSTAT (continuation)                                        C*                                                                                *VARSTAT <data>,Y,#MODEVAL                                                       *computes # of values (frequency) of the most common value in                    *the current record.                                                             *                                                                                *For example, in the case                                                        *1 3 2 3 2 2 1 1 3 3 3 3                                                         *#MODEVAL gives 6 since the mode (3) has 6 occurrences.                                                                                                            V = More information on VARSTAT                                                 %V=VARSTAT                                                                       *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                *                                                                                Shadows                                                                          R                     77777777777777777777777777777                              S                     77777777777777777777777777777                              T                     77777777777777777777777777777                              U                     77777777777777777777777777777                              V                                                77                              END                                                                              