SURVO84ED 81 165    81 S20                                                       *SAVE EDQF2                                                                      *LOAD EDQ                                                                        *                                                                                *FCREATE?                                                                        *A new Survo data file can be created                                            *                                                                                *     either   automatically (from a text file) by FILE SAVE operation           *     or       by activating a FILE CREATE operation                             *     or       by activating a FILE MAKE operation                               *                                                                                *There are also other commands like FILE COPY and FILE SAVE MAT                  *for creating new data files from data sets in the edit field or                 *from matrix files, etc.                                                         *                                                                                *  1 = FILE SAVE for transforming a text file into a Survo data file             *  2 = FILE CREATE for creating general data files                               *  3 = FILE MAKE for creating frames for simulated data                         C*  4 = FILE COPY for copying data sets into data files                           *  5 = FILE SAVE MAT for copying matrix files into data files                    *  D = More information on data management                                       *                                                                                %1=FSAVE? 2=CREATE 3=FMAKE 4=FCOPY? 5=MATFILE? D=FILE?                           *                                                                                *CREATE?                                                                         @FILE CREATE <name>,<bytes/obs>,<max # fields>                                   *creates a Survo data file as described in the following example.                *@C                                                                              *Creating Survo data file COMMUNES:                                              * * <bytes/obs> = number of bytes for each record (commune) is 128.              * * <max # fields> = maximum number of variables (fields) is 20.                 * * A free description of the purpose and the contents of the file may           *   precede the field descriptions (between lines FIELDS: and END).              * * Each field is defined by one line including information as follows:          *   # of field                                                                   *   | Type of field (S=string, N=numeric)                                        *   | |   Length of field (1,2,4 or 8 for numeric, up to 70 for string)          *   | |   |  Name of field (8 first characters form the reference word)          *   | |   |  |                                                                   *FILE CREATE COMMUNES,128,20                                                     *  The file consists of the Finnish communes.                                    *  Statistics mostly from 1979-80                                                *FIELDS:                                                                         *   1 S  16  Commune  Name of the commune                                        *   2 S   3  County   UUS,TUR,AHV,HAM,KYM,MIK,KAR,KUO,KES,VAA,OUL,LAP            *   3 N   4  People   Population 1.1.1980 (######) {{100,500000}                 *   4 N   4  Births   Live births in 1978 (####) {{0,6000}                       *   5 N   8  Area     Land area km^2 1.1.1979 (#####.##)                         *END @C                                                                          *In case of a numeric field the field description may include                    *                                                                                *  - the format of the variable for printouts etc. in the form (###.#),          *    in case of string fields the proper format is (#12), 12=# of bytes          *  - the range of permitted values in the form {{lower limit,upper limit}        *The range of the variable is tested when data are entered in FILE EDIT          *or FILE SHOW operation, for example.                                            *                                                                                *Parameters <bytes/obs> and <max # fields> in                                    *FILE CREATE <name>,<bytes/obs>,<max # fields>                                   *are optional. If they are missing, values are selected according to             *the FIELDS list by adding some extra space for future expansions.               *                                                                                *There are still other optional parameters available, but they are               *needed only in special circumstances (See next page).                           *@C                                                                              *The extra parameters A1,A2 and A3 in                                            @FILE CREATE <name>,<bytes/obs>,<max # fields>,A1,A2,A3                          *have the following tasks:                                                       * A1 is the length of the field name (default is 64).                            * A2 is the number of mask columns (see MASK?), (default 7).                     * A3 is the number of initial observations (default is 0).                       *For example, a file XYZ to be filled entirely with artificial data              *(generated by the VAR operation, for example) can be originated with            *space allocated for 500 observations by                                         *FILE CREATE XYZ,128,20,64,7,500                                                 *                                                                                *  D = More information on data management                                       *                                                                                %D=FILE?                                                                         *@SELECT                                                                         *                                                                                *FILES?                                                                          *The current edit field can be always saved in an edit file by a                 *SAVE <name of edit file> operation which normally is located on                 *the first line of the edit field.                                               *Any edit file formed in this way may be loaded back to the edit                 *field by a LOAD <name of edit file> operation and the former contents           *of the edit field will then be lost. To load parts of edit files                *on the empty lines of the edit field without spoiling the current               *situation, use a SHOW <name of edit file> operation.                            *                                                                                *Edit files are almost like text files, but with a rigid structure               *(constant line length) and lines saved without cr,lf ending.                    *An edit file name has the default extension .EDT.                               *                                                                                *An edit file can be converted to a text file by first loading it to             *the edit field and then saving it using COPY L1,L2 TO <text file>               *where L1-L2 are the edit lines to be saved. Observe that COPY                   *appends lines L1-L2 to the end of <text file>.                                  *To copy in the opposite direction from a text file to the edit field,           *use the SHOW <text file> operation which enables scrolling of the               *text file in a temporary window and loading of any lines from it.               *@C                                                                              *Data sets typed in the edit field can be saved in Survo data files              *first by saving the edit field in a text file (by COPY for example)             *and the by using the FILE SAVE <text_file>,<Survo_data_file>                    *operation.                                                                      *For data lists and tables with a DATA header, a straighforward method           *for this task is the FILE COPY operation:                                       *FILE COPY <data_list_or_table>,<Survo_data_file>                                *                                                                                *Survo provides various additional formats for files of sucros, matrices,        *results, etc.                                                                   *                                                                                *  D = More information on data management                                       *                                                                                %D=FILE?                                                                         *@SELECT                                                                         *                                                                                *FMAKE?                                                                          @FILE MAKE <new_data_file>,<m>,<n>,<X>,<type>,<lname>,<actcol>                   *                                                                                *(where <new_data_file>,<m>,<n> are obligatory parameters)                       *                                                                                *creates a Survo data file with <m> variables and <n> missing                    *observations.                                                                   *                                                                                *Optional parameters:                                                            *The names of variables have the string <X> as                                   *their common forepart and they are indexed by 1,2,3,...                         *For example if <X> is VAR then the names of variables will be                   *VAR1,VAR2,... Default for <X> is X.                                             *In case m=1 the only variable gets no index.                                    *                                                                                *The common (numerical) type of variables is given by <type>.                    *Alternatives are 1,2,4, and 8. Default is 4.                                    *<lname> is the length of field names (default 64) and                           *<actcol> is number of activation columns (default 7).                           *@C                                                                              *By default space is reserved for certain amount of additional                   *variables. This space can be adjusted also by a NEWSPACE=s1,s2                  *specification where s1 is # of extra bytes in each record and                   *s2 is # of extra variables. Thus by NEWSPACE=0,0 no extra                       *space for variables is reserved.                                                *                                                                                *The format of fields can be given by a specification like                       *FORMAT=####.##                                                                  *                                                                                *Permitted range of values is given by LIMITS=<min>,<max>.                       *                                                                                *Default indices (1,2,3,...) of variables can be altered by a BASE               *specification. For example, BASE=0 implies indices 0,1,2,... and                *BASE=001 indices 001,002,003,...                                                *@C                                                                              *FILE MAKE is intended primarily for creating frames for simulated               *data sets. For example, commands                                                *                                                                                *FILE MAKE BIN,100,1000                                                          *TRANSFORM BIN BY #UNIFORM(0,2)                                                  *                                                                                *generate a sample of size 1000 of 100 Bernoulli(0.5) variables                  *X1,X2,...,X100.                                                                 *                                                                                *  D = More information on data management                                       *                                                                                %D=FILE?                                                                         END                                                                              