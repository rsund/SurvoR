SURVO84ED 81 150    81 S20                                                       *SAVE EDQL3                                                                      *LOAD EDQ                                                                        *ARITED?                                                                         *Functions defined in the edit field:                                            *Functions of one or up to 10 variables may be defined by the user               *by entering a definition of the form                                            *   <function_name>(X1,X2,...):=function_of_X1,X2...                             *in the current edit field.                                                      *Examples: sinh(X):=(exp(X)-exp(-X))/2                                           *          norm(X,Y):=sqrt(X*X+Y*Y)                                              *          Fisher(r):=0.5*log((1+r)/(1-r))                                       *       Roots of equation X^2+P*X+Q=0:                                           *          Root1(P,Q):=-P/2+S(P,Q)   S(P,Q):=sqrt(P*P/4-Q)                       *          Root2(P,Q):=-P/2-S(P,Q)                                               *       The Least Common Denominator: lcd(u,v):=u*v/gcd(u,v)                     *Any function defined in such a way may be used as any standard function.        *Examples:                                                                       *          sinh(1)=1.1752011936                                                  *          norm(12,norm(3,4))=13                                                 *          Root1(1,-6)=2   Root2(1,-6)=-3                                        *          lcd(144,240)=720                                                      *@C                                                                              *Recursive functions:                                                            *By means of the if()then()else() structure recursive definitions for            *functions may given as follows:                                                 *     factorial(N):=if(N=1)then(1)else(N*factorial(N-1))                         *  Serial expansion of the exponential function:                                 *     expn(X,N):=if(N=0)then(1)else(expn(X,N-1)+term(X,N))                       *     term(X,N):=if(N=1)then(X)else(term(X,N-1)*X/N)                             *Examples:                                                                       *          factorial(7)=5040                                                     *          expn(1,20)=2.7182818285                                               *........................................................................        *Since recursive computations take much space and time,                          *it is more efficient to use the 'for' statement for definitions                 *above:                                                                          *     factorial(N):=for(I=1)to(N)product(I)                                      *     expn(X,N):=for(I=0)to(N)sum(X^I/factorial(I))                              *Another way to speed up recursive computation is to employ a                    *`remember' option (see next page).                                              *................................................................................*@C                                                                              *A recursive function can also be defined as follows:                            S     factorial(N)|=if(N=1)then(1)else(N*factorial(N-1))                         *See a '|' instead ':' in the definition! Then each numerical value              *once obtained in recursion process is saved temporarily in a table              *and instead of a recursion step a table-lookup is used in subsequent            *evaluations. Computation of function values is then much faster.                *                                                                                *Recursive computing requires much stack memory and may lead to                  *a stack overflow. The stack size given for the Survo Editor is                  *currently 10'000'000 bytes. The system parameter check_stack                    *(in SURVO.APU) determines the maximum size allowed in editorial                 *arithmetics. The default setting is check_stack=5000000 and it                  *can be changed temporarily by the SYSTEM command.                               >HELP-RECUR /                                               See |EXAMPLE|       C*@GOTO M                                                                         *M?                                                                              *                                                                                *  E = More information on editorial computing                                   %E=ARIT?                                                                         *@SELECT                                                                         *                                                                                *ARITIF?                                                                         *Conditional expressions may be given in the form                                *     if(<condition>)then(<expression>)else(<expression>)                        *<condition> can be any of the forms: a<b a<=b a=b a>=b a>b and a<>b             *Example: Y=if(X<0.5)then(0)else(1)                                              *@GOTO M                                                                         *                                                                                *ARITFOR?                                                                        *Sums products and maxima of expressions of one or more variables                *can be computed by the 'for' statement in editorial computing.                  *The general structure is                                                        *   <variable>=for(I=N1)to(N2)<sum|product|max|maxt>(<expression>)               *or                                                                              *   <variable>=for(I=N1)to(N2)term(T=A)<sum|product|max|maxt>(<expression>)      *                                                                                *Examples:                                                                       *s=for(i=1)to(100)sum(i)  s=5050                                                 *sum(N):=for(I=1)to(N)sum(1/I/I)  sqrt(6*sum(3000))=3.1412743806                 *factorial(N):=for(I=1)to(N)product(I)  factorial(10)=3628800                    *expn(X,N):=for(I=1)to(N)term(T=1)sum(T*X/I)                                     *           N terms from the serial expansion of exp(X)-1.                       *                                                                                *@GOTO M                                                                         *                                                                                *ARITM?                                                                          *Several expressions may be activated simultaneously by placing a '.'            *in front of '=' in all expressions which should be computed.                    *Simultaneous activation takes place by activating one of the                    *expressions in a normal way.                                                    *For example, by activating sqrt(X).= below                                      *........................................................................        *          X=5  pi=3.14159265359                                                 *          sqrt(X).=_                     log(X)/X.=                             *          X/10.=                         tan(pi*X/3).=                          *          X*X=  (. missing)              X*X.=                                  *........................................................................        *the display will be changed to                                                  *........................................................................        *          X=5  pi=3.14159265359                                                 *          sqrt(X).=2.2360679775          log(X)/X.=0.32188758248682             *          X/10.=0.5                      tan(pi*X/3).=-1.7320508076             *          X*X=   (. missing)             X*X.=25                                *........................................................................        *@G M                                                                            *                                                                                *ARITINT?                                                                        *Integral of function f(x) in the interval (a,b) is computed using               *Simpson's rule by the `integral' statement of the form                          *   <variable>=integral(f(x))from(a)to(b)                                        *or in extended forms                                                            *   <variable>=integral(f(x))from(a)to(b)eps(eps) ,                              *   <variable>=integral(f(x))from(a)to(b)eps(eps)n(n) .                          *The original range (a,b) is split by 2^n equidistant points using               *n=1,2,3,... until the relative error is <eps or the optional n value            *is achieved. Default values are eps=1e-10, n=12.                                *Examples:                                                                       *................................................................................*      a=0 b=1 eps=0.0001 pi=3.141592653589793 infinity=10                       *   I1=integral(x^2)from(a)to(b)eps(eps)                                         *   I2=integral(exp(-x*x/2)/sqrt(2*pi))from(-infinity)to(0)                      *   I1.=0.33333333333333                                                         *   I2.=0.5                                                                      *@C                                                                              *................................................................................*Number of prime integers less than N ( here N=1000000 ) can be roughly          *approximated by the integral                                                    *                                                                                *integral(1/log(x))from(2)to(N)eps(0)n(17)=78627.636537002                       *                                                                                *while the true number ishadows                                                                          ,                   8                                                            END                                                                              